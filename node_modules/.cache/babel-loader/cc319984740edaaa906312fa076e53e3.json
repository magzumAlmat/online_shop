{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\", \"rowIndex\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\n\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents); // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? 46 : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? 40 : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    bordered: bordered,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition,\n      deferUpdatePosition = _usePosition.deferUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    deferUpdatePosition: deferUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        rowIndex = props.rowIndex,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * (props.height || 46) : props.height;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var _top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          _top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","useState","useRef","useCallback","useImperativeHandle","useReducer","getTranslateDOMPositionXY","PropTypes","isFunction","flatten","debounce","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","EXPANDED_KEY","TREE_DEPTH","mergeCells","flattenData","isRTL","findRowKeys","findAllParents","shouldShowRowByExpanded","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","isSupportTouchEvent","filterTreeData","data","expandedRowKeys","rowKey","filter","rowData","parents","_expanded","length","DATA_PLACEHOLDER","Table","forwardRef","props","ref","affixHeader","children","_props$classPrefix","classPrefix","className","_props$data","dataProp","_props$defaultSortTyp","defaultSortType","DESC","widthProp","width","expandedRowKeysProp","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","_props$hover","hover","bordered","cellBordered","wordWrap","loading","_props$locale","locale","emptyMessage","_props$showHeader","showHeader","sortColumn","_props$rowHeight","rowHeight","sortTypeProp","sortType","_props$headerHeight","headerHeight","headerHeightProp","_props$minHeight","minHeight","_props$height","height","autoHeight","fillHeight","rtlProp","rtl","translate3d","virtualized","rowClassName","_props$rowExpandedHei","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","_props$shouldUpdateSc","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","_useState","setData","Error","hasOwnProperty","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","forceUseTransform","enable3DTransform","shouldFixedColumn","Array","from","some","child","_child$props","fixed","shouldRowSpanColumn","_child$props2","rowSpan","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","handleTableResizeChange","_prevSize","event","onScrollTo","vertical","onScrollTop","onScrollLeft","deferUpdatePosition","_useTableDimension","onTableScroll","coords","onTableResizeChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","_useCellDescriptor","onHeaderCellResize","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","current","root","body","scrollTop","scrollLeft","rowWidth","hasVerticalScrollbar","hasHorizontalScrollbar","classes","treetable","styles","createElement","cells","shouldRenderExpandedRow","depth","rowIndex","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","undefined","left","renderTableHeader","top","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","rowSpanState","renderRowData","hasChildren","isArray","nextRowKey","onClick","onContextMenu","expanded","_cell$props2","_cell$props2$rowSpan","_rowSpanState$current","_cell$props3","_rowSpanState$current2","call","_rowHeight","_cellKey","dataKey","removedCell","cloneElement","onTreeToggle","removed","renderScrollbar","scrollbars","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","_top","minTop","Math","abs","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","max","index","_rowData","maxHeight","shouldRender","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData2","_rowProps","wheelStyles","pointerEvents","topRowStyles","bottomRowStyles","addPrefix","contextValue","useMemo","Provider","value","displayName","propTypes","bool","oneOfType","number","string","any","array","object","func"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/rsuite-table/es/Table.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\", \"rowIndex\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents); // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? 46 : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? 40 : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    bordered: bordered,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition,\n      deferUpdatePosition = _usePosition.deferUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    deferUpdatePosition: deferUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        rowIndex = props.rowIndex,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * (props.height || 46) : props.height;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var _top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          _top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module"}