{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\src\\\\components\\\\projects\\\\showOrders.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport Pagination from './Pagination';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment';\nimport { Table } from 'reactstrap';\n\nclass showOrders extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      pageOfItems: []\n    };\n\n    this.onChangePage = pageOfItems => this.setState({\n      pageOfItems: pageOfItems\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      orders: nextProps.orders\n    });\n  }\n\n  render() {\n    const orders = this.state.orders;\n    console.log('orders from show orders', orders);\n    const auth = this.props.auth;\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n\n    if (orders.length > 0) {\n      return React.createElement(\"div\", {\n        className: \"project-list section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Order\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Total Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Pay option\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Created\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.pageOfItems.map((product, index) => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, product.order.map(item => React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"|\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 - \", item.name, \" | \\u0426\\u0435\\u043D\\u0430 - \", item.price, \" | \\u041A\\u043E\\u043B-\\u0432\\u043E - \", item.qty, \"| TOTAL PRICE - \", Number(item.qty * item.price), \" \")))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, product.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, product.phone), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, product.adress), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, product.comment), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, product.totalPr), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, product.pay.label), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, moment(product.createdAt.toDate()).calendar())))), React.createElement(Pagination, {\n        items: orders,\n        onChangePage: this.onChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nshowOrders.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  orders: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  orders: state.firestore.ordered.orders,\n  auth: state.firebase.auth\n}); // console.log('this is map state to props',mapStateToProps)\n\n\nexport default compose(firestoreConnect(props => [{\n  collection: 'orders',\n  orderBy: props.sort\n}]), connect(mapStateToProps))(showOrders);","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\РАбочий прототип\\marioplan-master\\src\\components\\projects\\showOrders.js"],"names":["React","Component","PropTypes","compose","connect","firestoreConnect","Redirect","Pagination","Spinner","moment","Table","showOrders","state","orders","pageOfItems","onChangePage","setState","componentWillReceiveProps","nextProps","render","console","log","auth","props","uid","length","map","product","index","order","item","name","price","qty","Number","phone","adress","comment","totalPr","pay","label","createdAt","toDate","calendar","propTypes","firestore","object","isRequired","array","mapStateToProps","ordered","firebase","collection","orderBy","sort"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'; \nimport Pagination from './Pagination';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment';\nimport {Table} from 'reactstrap'\n\n\nclass showOrders extends React.Component {\n    state = {\n      orders: [],\n      pageOfItems: []\n    };\n  \n    componentWillReceiveProps(nextProps) {\n      this.setState({ orders: nextProps.orders });\n    }\n  \n    onChangePage = pageOfItems => this.setState({ pageOfItems: pageOfItems });\n  \n    render() {\n      const { orders } = this.state;\n      console.log('orders from show orders',orders)\n      const { auth } = this.props;\n      if (!auth.uid) return <Redirect to='/products' />\n      if (orders.length > 0) {\n        return (\n            <div className=\"project-list section\">\n            <Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n               \n                  <th>Order</th>\n                  <th>Name</th>\n                  <th>Phone</th>\n                  <th>Address</th>\n                  <th>Comment</th>\n                  <th>Total Price</th>\n                  <th>Pay option</th>\n                  <th>Created</th>\n                </tr>\n              </thead>\n              <tbody>\n               \n                 \n             \n                {this.state.pageOfItems.map((product, index) => (\n                     \n                     <tr>\n                        <td>\n                             {product.order.map(item=>(\n                           <h6>\n                              \n                                {/* <img src={item.picture} /> */}\n                                <p>|Наименование - {item.name } | Цена - {item.price} | Кол-во - {item.qty}| TOTAL PRICE - {Number(item.qty*item.price)} </p>\n                               \n                                    \n                            </h6>\n\n                                 ))}\n                        </td>\n                        {/* <img src={product.order.cartItems.picture} key={picture}/>\n                        \n                        <p key={name} >{product.order.cartItems }</p>\n                        <p key={price} >{product.order.cartItems}</p>\n                        <span key={index} >{product.order.cartItems.qty}</span> */}\n                         <td>{product.name}</td>\n                         <td>{product.phone}</td>\n                         <td>{product.adress}</td>\n                         <td>{product.comment}</td>\n                         <td>{product.totalPr}</td>\n                         <td>{product.pay.label}</td>\n\n                         \n                         \n                       \n                         <td >{ moment(product.createdAt.toDate()).calendar() }</td>\n                     \n                     \n                    \n                \n                 </tr>\n                ))}\n             \n         \n              \n               \n             \n              </tbody>\n              <Pagination items={orders} onChangePage={this.onChangePage} />\n            </Table>\n        \n          </div>\n        );\n      } else {\n        return <Spinner />;\n      }\n    }\n  }\n  \n  showOrders.propTypes = {\n    firestore: PropTypes.object.isRequired,\n    orders: PropTypes.array\n  };\n\n\n  \n\nconst mapStateToProps = (state) => ({\n    orders: state.firestore.ordered.orders,\n    auth:state.firebase.auth\n  });\n  \n  // console.log('this is map state to props',mapStateToProps)\n  \n  \n  export default compose(\n    firestoreConnect(props => [\n      {\n        collection: 'orders',\n        orderBy: props.sort\n      }\n    ]),\n    connect(mapStateToProps)\n  )(showOrders);\n  "]},"metadata":{},"sourceType":"module"}