{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName || '',\n      authorLastName: profile.lastName || '',\n      authorId: authorId || '',\n      createdAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const deleteProject = (projectId, userId) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('projects').doc(projectId).get().then(doc => {\n      const docData = doc.data();\n\n      if (docData.authorId === userId) {\n        firestore.collection('projects').doc(projectId).delete().then(() => {\n          console.log('Collection Deleted');\n          dispatch({\n            type: 'DELETE_SUCCESS'\n          });\n        }).catch(err => {\n          console.log('Collection delete error', err);\n          dispatch({\n            type: 'DELETE_ERROR',\n            err\n          });\n        });\n      }\n    });\n  };\n};\nexport const editProject = (projectId, project) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('projects').doc(projectId).update({\n      content: project.content,\n      title: project.title\n    }).then(() => {\n      console.log('Project edited');\n      dispatch({\n        type: 'EDIT_SUCCESS'\n      });\n    }).catch(err => {\n      console.log('Project edit error');\n      dispatch({\n        type: 'EDIT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\РАбочий прототип\\marioplan-master\\src\\store\\actions\\projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","deleteProject","projectId","userId","doc","get","docData","data","delete","console","log","editProject","update","content","title"],"mappings":"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","sourcesContent":["export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName || '',\n            authorLastName: profile.lastName|| '',\n            authorId: authorId || '',\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        });\n    }\n};\n\nexport const deleteProject = (projectId, userId) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('projects').doc(projectId).get().then(doc =>{\n            const docData = doc.data();\n            if(docData.authorId === userId){\n                firestore.collection('projects').doc(projectId).delete().then(()=>{\n                    console.log('Collection Deleted');\n                    dispatch({type: 'DELETE_SUCCESS'});\n                }).catch(err => {\n                    console.log('Collection delete error', err);\n                    dispatch({type: 'DELETE_ERROR', err});\n                })\n            }\n        })\n    }\n}\n\nexport const editProject = (projectId, project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('projects').doc(projectId).update({\n            content: project.content,\n            title: project.title\n        }).then(() => {\n            console.log('Project edited');\n            dispatch({type: 'EDIT_SUCCESS'});\n        }).catch(err => {\n            console.log('Project edit error');\n            dispatch({type: 'EDIT_ERROR', err});\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}