{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\marioplan-master\\\\marioplan-master\\\\src\\\\components\\\\projects\\\\EditProject.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { editProject } from '../../store/actions/projectActions';\nimport CustomSelect from './Select';\nimport { Category } from '@material-ui/icons';\n\nclass EditProject extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: '',\n      title: ''\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      this.props.editProject(id, this.state);\n      this.props.history.push(\"/project/\".concat(id));\n    };\n\n    this.onChangeInput = (value, e) => {\n      // console.log(e.target.Category)\n      // const setCategory=e.target.value.toString()\n      this.state.Category = value; // console.log('Value of Category',typeof(valueString))\n      // console.log('Category=',this.props.Category)\n      // this.setState({\n      //     [e.target.id]: e.target.valueString\n      // })\n    };\n  }\n\n  render() {\n    const project = this.props.project;\n\n    if (project) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Edit Project\"), React.createElement(CustomSelect, {\n        placeholder: project.Category.label,\n        onChange: this.onChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.Category.map(Category => React.createElement(\"option\", {\n        value: Category.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, Category.label))), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        placeholder: project.title,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"content\",\n        placeholder: project.content,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1 z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Edit\"))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Loading Project...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    auth: state.firebase.auth,\n    project: project\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editProject: (projectId, project) => dispatch(editProject(projectId, project))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(EditProject);","map":{"version":3,"sources":["C:\\Users\\user\\Downloads\\marioplan-master\\marioplan-master\\src\\components\\projects\\EditProject.js"],"names":["React","Component","connect","compose","firestoreConnect","editProject","CustomSelect","Category","EditProject","state","content","title","handleChange","e","preventDefault","setState","target","id","value","handleClick","props","match","params","history","push","onChangeInput","render","project","label","map","mapStateToProps","ownProps","projects","firestore","data","auth","firebase","mapDispatchToProps","dispatch","projectId","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { editProject } from '../../store/actions/projectActions';\nimport CustomSelect from './Select'\nimport { Category } from '@material-ui/icons';\n\nclass EditProject extends Component {\n    state = {\n        content: '',\n        title: ''\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    handleClick = (e) =>{\n        e.preventDefault();\n        const id = this.props.match.params.id;\n        this.props.editProject(id, this.state);\n        this.props.history.push(`/project/${id}`)\n    }\n\n    \n    onChangeInput=(value,e)=> {\n        // console.log(e.target.Category)\n        // const setCategory=e.target.value.toString()\n        this.state.Category=value\n        \n        // console.log('Value of Category',typeof(valueString))\n        // console.log('Category=',this.props.Category)\n\n        \n        // this.setState({\n        //     [e.target.id]: e.target.valueString\n        // })\n        \n        \n    }\n          \n    render() {\n        const project = this.props.project;\n\n        if(project){\n            return (\n                <div className=\"container\">\n                    <form className=\"white\">\n                        <h5>Edit Project</h5>\n                        <CustomSelect  placeholder={project.Category.label} onChange={this.onChangeInput}  >\n                        {this.state.Category.map((Category) => (\n                            <option value={Category.value}>{Category.label}</option>\n                            ))}\n                            </CustomSelect> \n                        <div className=\"input-field\">\n                            <input type=\"text\" id=\"title\" placeholder={project.title} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"text\" id=\"content\" placeholder={project.content} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"input-field\" onClick={this.handleClick}>\n                            <button className=\"btn pink lighten-1 z-depth-0\">Edit</button>\n                        </div>\n                    </form>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div className=\"container\">\n                    <p>Loading Project...</p>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        auth: state.firebase.auth,\n        project: project\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        editProject: (projectId, project) => dispatch(editProject(projectId, project))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(EditProject);"]},"metadata":{},"sourceType":"module"}