{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'inset' && classes.inset, variant === 'middle' && classes.middle, absolute && classes.absolute, light && classes.light),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   *  The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","fade","styles","theme","root","height","margin","border","flexShrink","backgroundColor","palette","divider","absolute","position","bottom","left","width","inset","marginLeft","light","middle","spacing","marginRight","Divider","forwardRef","props","ref","_props$absolute","classes","className","_props$component","component","Component","_props$light","_props$role","role","undefined","_props$variant","variant","other","createElement","process","env","NODE_ENV","propTypes","bool","object","isRequired","string","elementType","oneOf","name"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/@material-ui/core/esm/Divider/Divider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'inset' && classes.inset, variant === 'middle' && classes.middle, absolute && classes.absolute, light && classes.light),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   *  The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;EACzC,OAAO;IACL;IACAC,IAAI,EAAE;MACJC,MAAM,EAAE,CADJ;MAEJC,MAAM,EAAE,CAFJ;MAGJ;MACAC,MAAM,EAAE,MAJJ;MAKJC,UAAU,EAAE,CALR;MAMJC,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC;IAN3B,CAFD;;IAWL;IACAC,QAAQ,EAAE;MACRC,QAAQ,EAAE,UADF;MAERC,MAAM,EAAE,CAFA;MAGRC,IAAI,EAAE,CAHE;MAIRC,KAAK,EAAE;IAJC,CAZL;;IAmBL;IACAC,KAAK,EAAE;MACLC,UAAU,EAAE;IADP,CApBF;;IAwBL;IACAC,KAAK,EAAE;MACLV,eAAe,EAAER,IAAI,CAACE,KAAK,CAACO,OAAN,CAAcC,OAAf,EAAwB,IAAxB;IADhB,CAzBF;;IA6BL;IACAS,MAAM,EAAE;MACNF,UAAU,EAAEf,KAAK,CAACkB,OAAN,CAAc,CAAd,CADN;MAENC,WAAW,EAAEnB,KAAK,CAACkB,OAAN,CAAc,CAAd;IAFP;EA9BH,CAAP;AAmCD,CApCM;AAqCP,IAAIE,OAAO,GAAG1B,KAAK,CAAC2B,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;EAC1D,IAAIC,eAAe,GAAGF,KAAK,CAACb,QAA5B;EAAA,IACIA,QAAQ,GAAGe,eAAe,KAAK,KAAK,CAAzB,GAA6B,KAA7B,GAAqCA,eADpD;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;EAAA,IAIIC,gBAAgB,GAAGL,KAAK,CAACM,SAJ7B;EAAA,IAKIC,SAAS,GAAGF,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBALrD;EAAA,IAMIG,YAAY,GAAGR,KAAK,CAACN,KANzB;EAAA,IAOIA,KAAK,GAAGc,YAAY,KAAK,KAAK,CAAtB,GAA0B,KAA1B,GAAkCA,YAP9C;EAAA,IAQIC,WAAW,GAAGT,KAAK,CAACU,IARxB;EAAA,IASIA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyBF,SAAS,KAAK,IAAd,GAAqB,WAArB,GAAmCI,SAA5D,GAAwEF,WATnF;EAAA,IAUIG,cAAc,GAAGZ,KAAK,CAACa,OAV3B;EAAA,IAWIA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,WAA5B,GAA0CA,cAXxD;EAAA,IAYIE,KAAK,GAAG3C,wBAAwB,CAAC6B,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,WAArC,EAAkD,OAAlD,EAA2D,MAA3D,EAAmE,SAAnE,CAAR,CAZpC;;EAcA,OAAO5B,KAAK,CAAC2C,aAAN,CAAoBR,SAApB,EAA+BrC,QAAQ,CAAC;IAC7CkC,SAAS,EAAE9B,IAAI,CAAC6B,OAAO,CAACxB,IAAT,EAAeyB,SAAf,EAA0BS,OAAO,KAAK,OAAZ,IAAuBV,OAAO,CAACX,KAAzD,EAAgEqB,OAAO,KAAK,QAAZ,IAAwBV,OAAO,CAACR,MAAhG,EAAwGR,QAAQ,IAAIgB,OAAO,CAAChB,QAA5H,EAAsIO,KAAK,IAAIS,OAAO,CAACT,KAAvJ,CAD8B;IAE7CgB,IAAI,EAAEA,IAFuC;IAG7CT,GAAG,EAAEA;EAHwC,CAAD,EAI3Ca,KAJ2C,CAAvC,CAAP;AAKD,CApBa,CAAd;AAqBAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCpB,OAAO,CAACqB,SAAR,GAAoB;EAC1D;AACF;AACA;EACEhC,QAAQ,EAAEd,SAAS,CAAC+C,IAJsC;;EAM1D;AACF;AACA;AACA;EACEjB,OAAO,EAAE9B,SAAS,CAACgD,MAAV,CAAiBC,UAVgC;;EAY1D;AACF;AACA;EACElB,SAAS,EAAE/B,SAAS,CAACkD,MAfqC;;EAiB1D;AACF;AACA;AACA;EACEjB,SAAS,EAAEjC,SAAS,CAACmD,WArBqC;;EAuB1D;AACF;AACA;EACE9B,KAAK,EAAErB,SAAS,CAAC+C,IA1ByC;;EA4B1D;AACF;AACA;EACEV,IAAI,EAAErC,SAAS,CAACkD,MA/B0C;;EAiC1D;AACF;AACA;EACEV,OAAO,EAAExC,SAAS,CAACoD,KAAV,CAAgB,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,CAAhB;AApCiD,CAA5D,GAqCI,KAAK,CArCT;AAsCA,eAAelD,UAAU,CAACE,MAAD,EAAS;EAChCiD,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZ5B,OAFY,CAAf"},"metadata":{},"sourceType":"module"}