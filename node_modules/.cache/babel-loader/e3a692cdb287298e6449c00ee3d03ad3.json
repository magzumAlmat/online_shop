{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\marioplan-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SHOW_CART, ADD_ITEM, DELETE_ITEM, UPDATE_PRICE, DECREMENT_QTY } from '..//actions/types';\nconst initialState = {\n  isOpen: false,\n  cartItems: [],\n  totalPrice: 0\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CART:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen\n      });\n\n    case ADD_ITEM:\n      const isAlreadyAdded = state.cartItems.find(product => product.id === action.payload.id);\n      if (!isAlreadyAdded) action.payload.qty = 1;\n      return _objectSpread({}, state, {\n        cartItems: !isAlreadyAdded ? [action.payload, ...state.cartItems] : state.cartItems.map(item => item.id === action.payload.id ? _objectSpread({}, item, {\n          qty: ++item.qty\n        }) : item)\n      });\n\n    case DELETE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      });\n\n    case DECREMENT_QTY:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.map(item => item.id === action.payload.id ? _objectSpread({}, item, {\n          qty: --item.qty\n        }) : item)\n      });\n\n    case UPDATE_PRICE:\n      return _objectSpread({}, state, {\n        totalPrice: state.cartItems.reduce((acc, val) => acc + val.qty * val.price, 0).toFixed(2)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\marioplan-master\\src\\store\\reducers\\cartReducer.js"],"names":["SHOW_CART","ADD_ITEM","DELETE_ITEM","UPDATE_PRICE","DECREMENT_QTY","initialState","isOpen","cartItems","totalPrice","state","action","type","isAlreadyAdded","find","product","id","payload","qty","map","item","filter","reduce","acc","val","price","toFixed"],"mappings":";AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,aALF,QAMO,mBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,SAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKL,QAAL;AACE,YAAMW,cAAc,GAAGH,KAAK,CAACF,SAAN,CAAgBM,IAAhB,CACrBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OAAP,CAAeD,EADpB,CAAvB;AAIA,UAAI,CAACH,cAAL,EAAqBF,MAAM,CAACM,OAAP,CAAeC,GAAf,GAAqB,CAArB;AAErB,+BACKR,KADL;AAEEF,QAAAA,SAAS,EAAE,CAACK,cAAD,GACP,CAACF,MAAM,CAACM,OAAR,EAAiB,GAAGP,KAAK,CAACF,SAA1B,CADO,GAEPE,KAAK,CAACF,SAAN,CAAgBW,GAAhB,CACEC,IAAI,IACFA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,qBACSI,IADT;AACeF,UAAAA,GAAG,EAAE,EAAEE,IAAI,CAACF;AAD3B,aAEIE,IAJR;AAJN;;AAWF,SAAKjB,WAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBa,MAAhB,CAAuBD,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACM,OAAlD;AAFb;;AAIF,SAAKZ,aAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,GAAhB,CACTC,IAAI,IACFA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,qBAAqCI,IAArC;AAA2CF,UAAAA,GAAG,EAAE,EAAEE,IAAI,CAACF;AAAvD,aAA+DE,IAFxD;AAFb;;AAOF,SAAKhB,YAAL;AACE,+BACKM,KADL;AAEED,QAAAA,UAAU,EAAEC,KAAK,CAACF,SAAN,CACTc,MADS,CACF,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAG,CAACN,GAAJ,GAAUM,GAAG,CAACC,KADhC,EACuC,CADvC,EAETC,OAFS,CAED,CAFC;AAFd;;AAMF;AACE,aAAOhB,KAAP;AA7CJ;AA+CD,CAhDD","sourcesContent":["import {\n  SHOW_CART,\n  ADD_ITEM,\n  DELETE_ITEM,\n  UPDATE_PRICE,\n  DECREMENT_QTY\n} from '..//actions/types';\n\nconst initialState = {\n  isOpen: false,\n  cartItems: [],\n  totalPrice: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CART:\n      return {\n        ...state,\n        isOpen: !state.isOpen\n      };\n    case ADD_ITEM:\n      const isAlreadyAdded = state.cartItems.find(\n        product => product.id === action.payload.id\n      );\n     \n      if (!isAlreadyAdded) action.payload.qty = 1;\n\n      return {\n        ...state,\n        cartItems: !isAlreadyAdded\n          ? [action.payload, ...state.cartItems]\n          : state.cartItems.map(\n              item =>\n                item.id === action.payload.id\n                  ? { ...item, qty: ++item.qty }\n                  : item\n            )\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n    case DECREMENT_QTY:\n      return {\n        ...state,\n        cartItems: state.cartItems.map(\n          item =>\n            item.id === action.payload.id ? { ...item, qty: --item.qty } : item\n        )\n      };\n    case UPDATE_PRICE:\n      return {\n        ...state,\n        totalPrice: state.cartItems\n          .reduce((acc, val) => acc + val.qty * val.price, 0)\n          .toFixed(2)\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}