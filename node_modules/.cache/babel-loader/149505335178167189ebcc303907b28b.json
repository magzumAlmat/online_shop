{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\src\\\\components\\\\projects\\\\Product.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cartActions'; // import uuid from 'uuid';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Col } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { showCart } from '../../store/actions/cartActions';\n\nconst styles = theme => ({// close: {\n  //   width: theme.spacing.unit * 4,\n  //   height: theme.spacing.unit * 4\n  // }\n});\n\nclass Product extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.addClick = product => {\n      this.setState({\n        open: true\n      });\n      const addItem = this.props.addItem;\n      addItem(product); // console.log('product from addClick 111111111111111111',product)\n      // console.log('item from addClick 111111111111111111',addItem)\n\n      const showCart = this.props.showCart;\n      console.log('after button clicked to that ------', showCart);\n      showCart(product);\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleRedirect = product => {\n      console.log('id of product', product.id);\n      const addID = this.props.addID; // addID(product)\n      // console.log('id from props',addID)\n      //this.props.history.push(`/product/${id}`)\n      // console.log('product from addClick 111111111111111111',product)\n      // console.log('item from addClick 111111111111111111',addItem)\n    };\n  }\n\n  render() {\n    const product = this.props.product;\n    const classes = this.props.classes;\n    return (// <div className=\"col-sm-6 col-md-4\">\n      //   <div className=\"card\">\n      //     <img\n      //       className=\"card-img-top img-fluid\"\n      //       src={product.picture}\n      //       alt={product.name}\n      //     />\n      //     <div className=\"card-body\">\n      //       <h5 className=\"card-title\">{product.name}</h5>\n      //       <p className=\"price\">{product.price} €</p>\n      //       <div className=\"text-center\">\n      //         <button\n      //           className=\"btn-custom\"\n      //           onClick={this.addClick.bind(this, product)}\n      //         >\n      //           Add to cart\n      //         </button>\n      //       </div>\n      //     </div>\n      //   </div>\n      //   <Snackbar\n      //     anchorOrigin={{\n      //       vertical: 'bottom',\n      //       horizontal: 'left'\n      //     }}\n      //     open={this.state.open}\n      //     autoHideDuration={2000}\n      //     onClose={this.handleClose}\n      //     ContentProps={{\n      //       'aria-describedby': 'message-id'\n      //     }}\n      //     message={<span id=\"message-id\">Item added!</span>}\n      //     action={[\n      //       <IconButton\n      //         key=\"close\"\n      //         aria-label=\"Close\"\n      //         color=\"inherit\"\n      //         className={classes.close}\n      //         onClick={this.handleClose}\n      //       >\n      //         <CloseIcon />\n      //       </IconButton>\n      //     ]}\n      //   />\n      // </div>\n      React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        top: true,\n        style: {\n          'width': '12rem',\n          'align-self': 'center'\n        },\n        className: \"card-img-top align-self:center\",\n        src: product.url,\n        alt: product.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, product.Category.value), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, product.name), React.createElement(CardText, {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, product.price, \" T\"), React.createElement(CardText, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"btn-custom btn-sm\",\n        onClick: this.addClick.bind(this, product),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Add to cart\"), React.createElement(Link, {\n        to: {\n          pathname: \"/product/\" + this.props.product.Id,\n          myCustomProps: product\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-custom btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"  \\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435 \")))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 2000,\n        onClose: this.handleClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Item added!\"),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nProduct.propTypes = {\n  showCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  cart: state.cart\n});\n\nexport default connect(mapStateToProps, {\n  addItem,\n  showCart\n})(withStyles(styles)(Product));","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\РАбочий прототип\\marioplan-master\\src\\components\\projects\\Product.js"],"names":["React","Component","connect","addItem","withStyles","Snackbar","IconButton","CloseIcon","Col","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Button","Link","PropTypes","showCart","styles","theme","Product","state","open","addClick","product","setState","props","console","log","handleClose","event","reason","handleRedirect","id","addID","render","classes","url","name","Category","value","price","bind","pathname","Id","myCustomProps","vertical","horizontal","close","propTypes","func","isRequired","mapStateToProps","cart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../store/actions/cartActions';\r\n// import uuid from 'uuid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Col} from 'reactstrap'\r\nimport { Card, CardImg, CardText, CardBody,CardLink,\r\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\r\n  import { Link } from 'react-router-dom';\r\n  import PropTypes from 'prop-types';\r\n  import { showCart } from '../../store/actions/cartActions';\r\n\r\n  const styles = theme => ({\r\n  // close: {\r\n  //   width: theme.spacing.unit * 4,\r\n  //   height: theme.spacing.unit * 4\r\n  // }\r\n});\r\n\r\nclass Product extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n  addClick = product => {\r\n    this.setState({ open: true });\r\n    const { addItem } = this.props;\r\n    addItem(product);\r\n    // console.log('product from addClick 111111111111111111',product)\r\n    // console.log('item from addClick 111111111111111111',addItem)\r\n    const { showCart } = this.props;\r\n    console.log('after button clicked to that ------',showCart)\r\n    showCart(product);\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  handleRedirect = product => {\r\n    console.log('id of product',product.id)\r\n    const {addID}=this.props\r\n    // addID(product)\r\n    // console.log('id from props',addID)\r\n\r\n    //this.props.history.push(`/product/${id}`)\r\n    \r\n    // console.log('product from addClick 111111111111111111',product)\r\n    // console.log('item from addClick 111111111111111111',addItem)\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    const { classes } = this.props;\r\n    return (\r\n      // <div className=\"col-sm-6 col-md-4\">\r\n      //   <div className=\"card\">\r\n      //     <img\r\n      //       className=\"card-img-top img-fluid\"\r\n      //       src={product.picture}\r\n      //       alt={product.name}\r\n      //     />\r\n      //     <div className=\"card-body\">\r\n      //       <h5 className=\"card-title\">{product.name}</h5>\r\n      //       <p className=\"price\">{product.price} €</p>\r\n          \r\n      //       <div className=\"text-center\">\r\n      //         <button\r\n      //           className=\"btn-custom\"\r\n      //           onClick={this.addClick.bind(this, product)}\r\n      //         >\r\n      //           Add to cart\r\n      //         </button>\r\n      //       </div>\r\n      //     </div>\r\n      //   </div>\r\n      //   <Snackbar\r\n      //     anchorOrigin={{\r\n      //       vertical: 'bottom',\r\n      //       horizontal: 'left'\r\n      //     }}\r\n      //     open={this.state.open}\r\n      //     autoHideDuration={2000}\r\n      //     onClose={this.handleClose}\r\n      //     ContentProps={{\r\n      //       'aria-describedby': 'message-id'\r\n      //     }}\r\n      //     message={<span id=\"message-id\">Item added!</span>}\r\n      //     action={[\r\n      //       <IconButton\r\n      //         key=\"close\"\r\n      //         aria-label=\"Close\"\r\n      //         color=\"inherit\"\r\n      //         className={classes.close}\r\n      //         onClick={this.handleClose}\r\n      //       >\r\n      //         <CloseIcon />\r\n      //       </IconButton>\r\n      //     ]}\r\n      //   />\r\n      // </div>\r\n      \r\n\r\n      <>\r\n      <Col xs='3'>\r\n        <Card>\r\n        {/* {product} */}\r\n          <CardImg top\r\n          style={{'width':'12rem','align-self':'center'}}\r\n            className=\"card-img-top align-self:center\"\r\n            src={product.url}\r\n            alt={product.name}\r\n          />\r\n\r\n          <CardBody>\r\n          <CardTitle>{product.Category.value}</CardTitle>\r\n          <CardSubtitle>{product.name}</CardSubtitle>\r\n          <CardText className=\"price\">{product.price} T</CardText>\r\n\r\n                   \r\n            <CardText className=\"text-center\">\r\n             \r\n\r\n            </CardText>\r\n            <Button\r\n                className=\"btn-custom btn-sm\"\r\n                onClick={this.addClick.bind(this, product)}>\r\n                Add to cart\r\n              </Button>\r\n             \r\n\r\n              <Link to={\r\n                { \r\n                    pathname: \"/product/\" + this.props.product.Id,\r\n                    myCustomProps: product\r\n                }\r\n              }>\r\n                   <Button  className=\"btn-custom btn-sm\">  Подробнее </Button>\r\n            </Link>\r\n          </CardBody>\r\n        </Card>\r\n\r\n\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left'\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={2000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id'\r\n          }}\r\n          message={<span id=\"message-id\">Item added!</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Col>\r\n    </>\r\n      );\r\n  }\r\n}\r\n\r\n\r\n\r\nProduct.propTypes = {\r\n  showCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart\r\n});\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addItem,showCart }\r\n)(withStyles(styles)(Product));"]},"metadata":{},"sourceType":"module"}