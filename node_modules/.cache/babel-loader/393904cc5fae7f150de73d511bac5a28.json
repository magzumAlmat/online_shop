{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\src\\\\components\\\\projects\\\\Products.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport Product from './Product';\nimport Pagination from './Pagination';\nimport Spinner from '../layout/Spinner';\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      pageOfItems: []\n    };\n\n    this.onChangePage = pageOfItems => this.setState({\n      pageOfItems: pageOfItems\n    });\n\n    this.selectCategory = (e, props, state) => {\n      console.log(e.target.value);\n      this.setState({\n        pickedCategory: []\n      });\n      this.setState({\n        pickedCategory: e.target.value\n      }); // this.setState({\n      //   pickedCategory: ''\n      // });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      products: nextProps.products\n    });\n  }\n\n  // getFilteredProducts(pickedCategory) {\n  //   console.log('Я внутри getFilteredProduycts------------------------------------------')\n  //   console.log(' '  ,this.state.pickedCategory)\n  //   const filter = this.props.filter;\n  //   console.log(this.state.pageOfItems)\n  //   // console.log('------------------------------------------')\n  //   // console.log('вывод ',(this.state.pageOfItems))\n  //   // console.log('------------------------------------------')\n  //   const filteredProducts = this.state.pageOfItems.map(obj => {\n  //   const filtered = Object.values(obj.Category.value)\n  //       let concatedArray=[]\n  //       let buffer=''\n  //       // console.log('Filtered до цикла  ', filtered)\n  //       if (!filtered==null){   \n  //         console.log('filtered is null', filtered)  \n  //       }\n  //       else{ buffer = filtered.join('')}\n  //       concatedArray.push(buffer,obj)\n  //       // console.log('buffer ',buffer)\n  //       // console.log('obj',obj)\n  //       console.log('  pickedCategory  ---- ', this.state.pickedCategory)\n  //       if (buffer===this.state.pickedCategory.toString()){\n  //         this.state.newArray.push(concatedArray[1])\n  //         console.log('GG '  ,this.state.newArray)}\n  //       if (filtered.length === 0) return null;\n  //     })\n  getFilteredProducts(pickedCategory) {\n    this.state.newArray = [];\n    const filter = this.props.filter; // console.log(this.state.pageOfItems)\n    // console.log('------------------------------------------')\n    // console.log('вывод ',(this.state.pageOfItems))\n    // console.log('------------------------------------------')\n\n    const filteredProducts = this.state.pageOfItems.map(obj => {\n      const filtered = Object.values(obj.Category.value);\n      let concatedArray = [];\n      let buffer = ''; // console.log('Filtered до цикла  ', filtered)\n\n      buffer = filtered.join('');\n      concatedArray.push(buffer, obj); // console.log('buffer ',buffer)\n      // console.log('obj',obj)\n\n      console.log('3 pickedCategory is ', pickedCategory);\n\n      if (buffer === this.state.pickedCategory.toString()) {\n        this.state.newArray.push(concatedArray[1]);\n        console.log('4 NewArray -  ', this.state.newArray);\n      } // if (newArray.length === 0) return <p>Выберите категорию товара</p>;\n\n    });\n    return React.createElement(React.Fragment, null, this.state.newArray.map(product => React.createElement(Product, {\n      product: product,\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), \";\");\n  }\n\n  render() {\n    const products = this.state.products;\n\n    if (products.length > 0) {\n      return React.createElement(\"div\", {\n        className: \"products-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.pageOfItems.map(product => React.createElement(Product, {\n        product: product,\n        key: product.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(Pagination, {\n        items: products,\n        onChangePage: this.onChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nProducts.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  products: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  products: state.firestore.ordered.products\n}); // console.log('this is map state to props',mapStateToProps)\n\n\nexport default compose(firestoreConnect(props => [{\n  collection: 'products',\n  orderBy: props.sort\n}]), connect(mapStateToProps))(Products);","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\РАбочий прототип\\marioplan-master\\src\\components\\projects\\Products.js"],"names":["React","Component","PropTypes","compose","connect","firestoreConnect","Product","Pagination","Spinner","Products","state","products","pageOfItems","onChangePage","setState","selectCategory","e","props","console","log","target","value","pickedCategory","componentWillReceiveProps","nextProps","getFilteredProducts","newArray","filter","filteredProducts","map","obj","filtered","Object","values","Category","concatedArray","buffer","join","push","toString","product","id","render","length","propTypes","firestore","object","isRequired","array","mapStateToProps","ordered","collection","orderBy","sort"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nimport Product from './Product';\r\nimport Pagination from './Pagination';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    products: [],\r\n    pageOfItems: []\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ products: nextProps.products });\r\n  }\r\n\r\n  \r\n  onChangePage = pageOfItems => this.setState({ pageOfItems: pageOfItems });\r\n\r\n  selectCategory=(e,props,state)=>{\r\n    \r\n    console.log(e.target.value)\r\n\r\n    this.setState({ pickedCategory:[]})\r\n    this.setState({ pickedCategory: e.target.value})\r\n\r\n    // this.setState({\r\n    //   pickedCategory: ''\r\n    // });\r\n    \r\n  }\r\n \r\n  // getFilteredProducts(pickedCategory) {\r\n  //   console.log('Я внутри getFilteredProduycts------------------------------------------')\r\n  //   console.log(' '  ,this.state.pickedCategory)\r\n   \r\n  \r\n  //   const filter = this.props.filter;\r\n  \r\n  //   console.log(this.state.pageOfItems)\r\n                            \r\n  //   // console.log('------------------------------------------')\r\n  //   // console.log('вывод ',(this.state.pageOfItems))\r\n  //   // console.log('------------------------------------------')\r\n\r\n  //   const filteredProducts = this.state.pageOfItems.map(obj => {\r\n  //   const filtered = Object.values(obj.Category.value)\r\n  //       let concatedArray=[]\r\n  //       let buffer=''\r\n  //       // console.log('Filtered до цикла  ', filtered)\r\n        \r\n  //       if (!filtered==null){   \r\n  //         console.log('filtered is null', filtered)  \r\n       \r\n  //       }\r\n  //       else{ buffer = filtered.join('')}\r\n       \r\n  //       concatedArray.push(buffer,obj)\r\n\r\n  //       // console.log('buffer ',buffer)\r\n  //       // console.log('obj',obj)\r\n\r\n  //       console.log('  pickedCategory  ---- ', this.state.pickedCategory)\r\n  //       if (buffer===this.state.pickedCategory.toString()){\r\n  //         this.state.newArray.push(concatedArray[1])\r\n  //         console.log('GG '  ,this.state.newArray)}\r\n     \r\n  //       if (filtered.length === 0) return null;\r\n  //     })\r\n      \r\n  \r\n  getFilteredProducts(pickedCategory) {\r\n    this.state.newArray=[];\r\n    const filter = this.props.filter;\r\n    // console.log(this.state.pageOfItems)\r\n    // console.log('------------------------------------------')\r\n    // console.log('вывод ',(this.state.pageOfItems))\r\n    // console.log('------------------------------------------')\r\n    const filteredProducts = this.state.pageOfItems.map(obj => \r\n      {\r\n    const filtered = Object.values(obj.Category.value)\r\n    let concatedArray=[]\r\n    let buffer=''\r\n    // console.log('Filtered до цикла  ', filtered)\r\n    buffer = filtered.join('')\r\n    concatedArray.push(buffer,obj)\r\n    // console.log('buffer ',buffer)\r\n    // console.log('obj',obj)\r\n    console.log('3 pickedCategory is ',pickedCategory)\r\n    if (buffer===this.state.pickedCategory.toString()){\r\n          this.state.newArray.push(concatedArray[1])\r\n          console.log('4 NewArray -  '  ,this.state.newArray)}\r\n     // if (newArray.length === 0) return <p>Выберите категорию товара</p>;\r\n})\r\n\r\n      return  <>\r\n      {this.state.newArray.map(product => (\r\n        <Product product={product} key={product.id}  />\r\n        ) )};\r\n      </> \r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    const { products } = this.state;\r\n    if (products.length > 0) {\r\n      return (\r\n        <div className=\"products-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {this.state.pageOfItems.map(product => (\r\n                <Product product={product} key={product.id} />\r\n              ))}\r\n              <Pagination items={products} onChangePage={this.onChangePage} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n\r\nProducts.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n  products: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.firestore.ordered.products\r\n});\r\n\r\n// console.log('this is map state to props',mapStateToProps)\r\n\r\n\r\nexport default compose(\r\n  firestoreConnect(props => [\r\n    {\r\n      collection: 'products',\r\n      orderBy: props.sort\r\n    }\r\n  ]),\r\n  connect(mapStateToProps)\r\n)(Products);\r\n"]},"metadata":{},"sourceType":"module"}