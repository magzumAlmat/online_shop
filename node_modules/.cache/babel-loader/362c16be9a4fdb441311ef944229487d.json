{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class BooleanType extends MixedType {\n  constructor(errorMessage) {\n    super('boolean');\n    super.pushRule({\n      onValid: v => typeof v === 'boolean',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n\n}\nexport default function getBooleanType(errorMessage) {\n  return new BooleanType(errorMessage);\n}","map":{"version":3,"sources":["../src/BooleanType.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,aAA1B;AAIA,OAAM,MAAO,WAAP,SAAiE,SAAjE,CAKL;EACC,WAAA,CAAY,YAAZ,EAAqC;IACnC,MAAM,SAAN;IACA,MAAM,QAAN,CAAe;MACb,OAAO,EAAE,CAAC,IAAI,OAAO,CAAP,KAAa,SADd;MAEb,YAAY,EAAE,YAAY,IAAI,KAAK,MAAL,CAAY;IAF7B,CAAf;EAID;;AAPF;AAUD,eAAc,SAAU,cAAV,CAAqD,YAArD,EAAqE;EACjF,OAAO,IAAI,WAAJ,CAA6B,YAA7B,CAAP;AACD","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nexport class BooleanType extends MixedType {\n    constructor(errorMessage) {\n        super('boolean');\n        super.pushRule({\n            onValid: v => typeof v === 'boolean',\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n}\nexport default function getBooleanType(errorMessage) {\n    return new BooleanType(errorMessage);\n}\n//# sourceMappingURL=BooleanType.js.map"]},"metadata":{},"sourceType":"module"}