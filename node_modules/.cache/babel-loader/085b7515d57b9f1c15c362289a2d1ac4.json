{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\amagzum\\\\Downloads\\\\22082021\\\\\\u0420\\u0410\\u0431\\u043E\\u0447\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0442\\u043E\\u0442\\u0438\\u043F\\\\marioplan-master\\\\src\\\\components\\\\auth\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\nimport { useRef, useState } from \"react\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.signUp(this.state);\n    };\n  }\n\n  render() {\n    const captchaRef = useRef();\n\n    const _useState = useState(\"Start editing to see some magic happen!\"),\n          _useState2 = _slicedToArray(_useState, 2),\n          text = _useState2[0],\n          setText = _useState2[1];\n\n    const _this$props = this.props,\n          auth = _this$props.auth,\n          authError = _this$props.authError;\n    if (auth.uid) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"white\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastName\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Hello CodeSandbox\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, text), React.createElement(ReCAPTCHA, {\n      ref: captchaRef,\n      sitekey: \"6LdXUngaAAAAAFdFT6qjtEbqe4C884QR_AYEHl11\",\n      onChange: value => {\n        setText(\"There you go \".concat(value));\n      },\n      size: \"invisible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn pink lighten-1 z-depth-0\",\n      onClick: event => {\n        setText(\"yes. it was a click\");\n        captchaRef.current.execute();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"red-text center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, authError ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, authError) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\amagzum\\Downloads\\22082021\\РАбочий прототип\\marioplan-master\\src\\components\\auth\\SignUp.js"],"names":["React","Component","Redirect","connect","signUp","useRef","useState","ReCAPTCHA","SignUp","state","email","password","firstName","lastName","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","render","captchaRef","text","setText","auth","authError","uid","event","current","execute","mapStateToProps","firebase","mapDispatchToProps","dispatch","newUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\nimport  { useRef, useState } from \"react\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.signUp(this.state);\n    }\n\n\n    \n    render() {\n        const captchaRef = useRef();\n        const [text, setText] = useState(\"Start editing to see some magic happen!\");\n\n        const { auth, authError } = this.props;\n\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <h1>Hello CodeSandbox</h1>\n                     <h2>{text}</h2>\n                    <ReCAPTCHA\n                                ref={captchaRef}\n                                sitekey=\"6LdXUngaAAAAAFdFT6qjtEbqe4C884QR_AYEHl11\"\n                                onChange={(value) => {\n                                setText(`There you go ${value}`);\n                                }}\n                                size=\"invisible\"\n                            />\n                            \n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\" onClick={(event) => {\n                            setText(\"yes. it was a click\");\n                            captchaRef.current.execute();\n                            }}>Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n"]},"metadata":{},"sourceType":"module"}