{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","root","display","alignItems","padding","justifyContent","flex","spacing","marginLeft","DialogActions","forwardRef","props","ref","_props$disableSpacing","disableSpacing","classes","className","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","isRequired","string","bool","name"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,WAAP,C,CAAoB;;AAEpB,OAAO,IAAIC,MAAM,GAAG;EAClB;EACAC,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJC,UAAU,EAAE,QAFR;IAGJC,OAAO,EAAE,CAHL;IAIJC,cAAc,EAAE,UAJZ;IAKJC,IAAI,EAAE;EALF,CAFY;;EAUlB;EACAC,OAAO,EAAE;IACP,aAAa;MACXC,UAAU,EAAE;IADD;EADN;AAXS,CAAb;AAiBP,IAAIC,aAAa,GAAGb,KAAK,CAACc,UAAN,CAAiB,SAASD,aAAT,CAAuBE,KAAvB,EAA8BC,GAA9B,EAAmC;EACtE,IAAIC,qBAAqB,GAAGF,KAAK,CAACG,cAAlC;EAAA,IACIA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBADhE;EAAA,IAEIE,OAAO,GAAGJ,KAAK,CAACI,OAFpB;EAAA,IAGIC,SAAS,GAAGL,KAAK,CAACK,SAHtB;EAAA,IAIIC,KAAK,GAAGtB,wBAAwB,CAACgB,KAAD,EAAQ,CAAC,gBAAD,EAAmB,SAAnB,EAA8B,WAA9B,CAAR,CAJpC;;EAMA,OAAOf,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2BxB,QAAQ,CAAC;IACzCsB,SAAS,EAAElB,IAAI,CAACiB,OAAO,CAACd,IAAT,EAAee,SAAf,EAA0B,CAACF,cAAD,IAAmBC,OAAO,CAACR,OAArD,CAD0B;IAEzCK,GAAG,EAAEA;EAFoC,CAAD,EAGvCK,KAHuC,CAAnC,CAAP;AAID,CAXmB,CAApB;AAYAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,aAAa,CAACa,SAAd,GAA0B;EAChE;AACF;AACA;EACEC,QAAQ,EAAE1B,SAAS,CAAC2B,IAJ4C;;EAMhE;AACF;AACA;AACA;EACET,OAAO,EAAElB,SAAS,CAAC4B,MAAV,CAAiBC,UAVsC;;EAYhE;AACF;AACA;EACEV,SAAS,EAAEnB,SAAS,CAAC8B,MAf2C;;EAiBhE;AACF;AACA;EACEb,cAAc,EAAEjB,SAAS,CAAC+B;AApBsC,CAAlE,GAqBI,KAAK,CArBT;AAsBA,eAAe7B,UAAU,CAACC,MAAD,EAAS;EAChC6B,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZpB,aAFY,CAAf"},"metadata":{},"sourceType":"module"}