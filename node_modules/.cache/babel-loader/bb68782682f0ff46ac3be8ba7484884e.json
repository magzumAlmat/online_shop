{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { setRef } from '../utils/reactHelpers';\n/**\n * ⚠️⚠️⚠️\n * If you want the DOM element of a Material-UI component check out\n * [/getting-started/faq/#how-can-i-access-the-dom-element](FAQ: How can I access the DOM element?)\n * first.\n *\n * This component uses `findDOMNode` which is deprecated in React.StrictMode.\n *\n * Helper component to allow attaching a ref to a\n * wrapped element to access the underlying DOM element.\n *\n * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.\n * For example:\n * ```jsx\n * import React from 'react';\n * import RootRef from '@material-ui/core/RootRef';\n *\n * class MyComponent extends React.Component {\n *   constructor() {\n *     super();\n *     this.domRef = React.createRef();\n *   }\n *\n *   componentDidMount() {\n *     console.log(this.domRef.current); // DOM node\n *   }\n *\n *   render() {\n *     return (\n *       <RootRef rootRef={this.domRef}>\n *         <SomeChildComponent />\n *       </RootRef>\n *     );\n *   }\n * }\n * ```\n */\n\nvar RootRef = /*#__PURE__*/function (_React$Component) {\n  _inherits(RootRef, _React$Component);\n\n  function RootRef() {\n    _classCallCheck(this, RootRef);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RootRef).apply(this, arguments));\n  }\n\n  _createClass(RootRef, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ref = ReactDOM.findDOMNode(this);\n      setRef(this.props.rootRef, this.ref);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var ref = ReactDOM.findDOMNode(this);\n\n      if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {\n        if (prevProps.rootRef !== this.props.rootRef) {\n          setRef(prevProps.rootRef, null);\n        }\n\n        this.ref = ref;\n        setRef(this.props.rootRef, this.ref);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.ref = null;\n      setRef(this.props.rootRef, null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return RootRef;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? RootRef.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Provide a way to access the DOM node of the wrapped element.\n   * You can provide a callback ref or a `React.createRef()` ref.\n   */\n  rootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? RootRef.propTypes = exactProp(RootRef.propTypes) : void 0;\n}\n\nexport default RootRef;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","React","ReactDOM","PropTypes","exactProp","setRef","RootRef","_React$Component","apply","arguments","key","value","componentDidMount","ref","findDOMNode","props","rootRef","componentDidUpdate","prevProps","componentWillUnmount","render","children","Component","process","env","NODE_ENV","propTypes","element","isRequired","oneOfType","func","object"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/@material-ui/core/esm/RootRef/RootRef.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { setRef } from '../utils/reactHelpers';\n/**\n * ⚠️⚠️⚠️\n * If you want the DOM element of a Material-UI component check out\n * [/getting-started/faq/#how-can-i-access-the-dom-element](FAQ: How can I access the DOM element?)\n * first.\n *\n * This component uses `findDOMNode` which is deprecated in React.StrictMode.\n *\n * Helper component to allow attaching a ref to a\n * wrapped element to access the underlying DOM element.\n *\n * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.\n * For example:\n * ```jsx\n * import React from 'react';\n * import RootRef from '@material-ui/core/RootRef';\n *\n * class MyComponent extends React.Component {\n *   constructor() {\n *     super();\n *     this.domRef = React.createRef();\n *   }\n *\n *   componentDidMount() {\n *     console.log(this.domRef.current); // DOM node\n *   }\n *\n *   render() {\n *     return (\n *       <RootRef rootRef={this.domRef}>\n *         <SomeChildComponent />\n *       </RootRef>\n *     );\n *   }\n * }\n * ```\n */\n\nvar RootRef =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RootRef, _React$Component);\n\n  function RootRef() {\n    _classCallCheck(this, RootRef);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RootRef).apply(this, arguments));\n  }\n\n  _createClass(RootRef, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ref = ReactDOM.findDOMNode(this);\n      setRef(this.props.rootRef, this.ref);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var ref = ReactDOM.findDOMNode(this);\n\n      if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {\n        if (prevProps.rootRef !== this.props.rootRef) {\n          setRef(prevProps.rootRef, null);\n        }\n\n        this.ref = ref;\n        setRef(this.props.rootRef, this.ref);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.ref = null;\n      setRef(this.props.rootRef, null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return RootRef;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? RootRef.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Provide a way to access the DOM node of the wrapped element.\n   * You can provide a callback ref or a `React.createRef()` ref.\n   */\n  rootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? RootRef.propTypes = exactProp(RootRef.propTypes) : void 0;\n}\n\nexport default RootRef;"],"mappings":"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"},"metadata":{},"sourceType":"module"}