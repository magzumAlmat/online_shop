{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class StringType extends MixedType {\n  constructor(errorMessage) {\n    super('string');\n    super.pushRule({\n      onValid: v => typeof v === 'string',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n\n  containsLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetter;\n    super.pushRule({\n      onValid: v => /[a-zA-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsUppercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsUppercaseLetter;\n    super.pushRule({\n      onValid: v => /[A-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsLowercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLowercaseLetter;\n    super.pushRule({\n      onValid: v => /[a-z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsLetterOnly() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetterOnly;\n    super.pushRule({\n      onValid: v => /^[a-zA-Z]+$/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsNumber() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsNumber;\n    super.pushRule({\n      onValid: v => /[0-9]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  isOneOf(values) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.isOneOf;\n    super.pushRule({\n      onValid: v => !!~values.indexOf(v),\n      errorMessage,\n      params: {\n        values\n      }\n    });\n    return this;\n  }\n\n  isEmail() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isEmail;\n    // http://emailregex.com/\n    const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  isURL() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isURL;\n    const regexp = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i');\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  isHex() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isHex;\n    const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  pattern(regexp) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.pattern;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage,\n      params: {\n        regexp\n      }\n    });\n    return this;\n  }\n\n  rangeLength(minLength, maxLength) {\n    let errorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale.rangeLength;\n    super.pushRule({\n      onValid: value => value.length >= minLength && value.length <= maxLength,\n      errorMessage,\n      params: {\n        minLength,\n        maxLength\n      }\n    });\n    return this;\n  }\n\n  minLength(minLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.minLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length >= minLength,\n      errorMessage,\n      params: {\n        minLength\n      }\n    });\n    return this;\n  }\n\n  maxLength(maxLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.maxLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length <= maxLength,\n      errorMessage,\n      params: {\n        maxLength\n      }\n    });\n    return this;\n  }\n\n}\nexport default function getStringType(errorMessage) {\n  return new StringType(errorMessage);\n}","map":{"version":3,"sources":["../src/StringType.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nexport class StringType extends MixedType {\n    constructor(errorMessage) {\n        super('string');\n        super.pushRule({\n            onValid: v => typeof v === 'string',\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n    containsLetter(errorMessage = this.locale.containsLetter) {\n        super.pushRule({\n            onValid: v => /[a-zA-Z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsUppercaseLetter(errorMessage = this.locale.containsUppercaseLetter) {\n        super.pushRule({\n            onValid: v => /[A-Z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsLowercaseLetter(errorMessage = this.locale.containsLowercaseLetter) {\n        super.pushRule({\n            onValid: v => /[a-z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsLetterOnly(errorMessage = this.locale.containsLetterOnly) {\n        super.pushRule({\n            onValid: v => /^[a-zA-Z]+$/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsNumber(errorMessage = this.locale.containsNumber) {\n        super.pushRule({\n            onValid: v => /[0-9]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isOneOf(values, errorMessage = this.locale.isOneOf) {\n        super.pushRule({\n            onValid: v => !!~values.indexOf(v),\n            errorMessage,\n            params: { values }\n        });\n        return this;\n    }\n    isEmail(errorMessage = this.locale.isEmail) {\n        // http://emailregex.com/\n        const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isURL(errorMessage = this.locale.isURL) {\n        const regexp = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i');\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isHex(errorMessage = this.locale.isHex) {\n        const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    pattern(regexp, errorMessage = this.locale.pattern) {\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage,\n            params: { regexp }\n        });\n        return this;\n    }\n    rangeLength(minLength, maxLength, errorMessage = this.locale.rangeLength) {\n        super.pushRule({\n            onValid: value => value.length >= minLength && value.length <= maxLength,\n            errorMessage,\n            params: { minLength, maxLength }\n        });\n        return this;\n    }\n    minLength(minLength, errorMessage = this.locale.minLength) {\n        super.pushRule({\n            onValid: value => Array.from(value).length >= minLength,\n            errorMessage,\n            params: { minLength }\n        });\n        return this;\n    }\n    maxLength(maxLength, errorMessage = this.locale.maxLength) {\n        super.pushRule({\n            onValid: value => Array.from(value).length <= maxLength,\n            errorMessage,\n            params: { maxLength }\n        });\n        return this;\n    }\n}\nexport default function getStringType(errorMessage) {\n    return new StringType(errorMessage);\n}\n//# sourceMappingURL=StringType.js.map"]},"metadata":{},"sourceType":"module"}