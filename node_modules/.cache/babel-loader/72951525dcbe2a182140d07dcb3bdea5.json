{"ast":null,"code":"/**! \n * hotkeys-js v3.10.1 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2022 kenny wong <wowohoo@qq.com> \n * http://jaywcjlove.github.io/hotkeys \n * Licensed under the MIT license \n */\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // 绑定事件\n\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // 修饰键转换成对应的键码\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // 处理传的key字符串转换成数组\n\n\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // 匹配任何空白字符,包括空格、制表符、换页符等等\n\n  var keys = key.split(','); // 同时设置多个快捷键，以','分割\n\n  var index = keys.lastIndexOf(''); // 快捷键可能包含','，需特殊处理\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // 比较修饰键的数组\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  backspace: 8,\n  '⌫': 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  '↩': 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n}; // Modifier Keys\n\nvar _modifier = {\n  // shiftKey\n  '⇧': 16,\n  shift: 16,\n  // altKey\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '⌘': 91,\n  cmd: 91,\n  command: 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nvar _handlers = {}; // F1~F12 special key\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\nvar _downKeys = []; // 记录摁下的绑定键\n\nvar winListendFocus = false; // window是否已经监听了focus事件\n\nvar _scope = 'all'; // 默认热键范围\n\nvar elementHasBindEvent = []; // 已绑定事件的节点记录\n// 返回键码\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n};\n\nvar getKey = function getKey(x) {\n  return Object.keys(_keyMap).find(function (k) {\n    return _keyMap[k] === x;\n  });\n};\n\nvar getModifier = function getModifier(x) {\n  return Object.keys(_modifier).find(function (k) {\n    return _modifier[k] === x;\n  });\n}; // 设置获取当前范围（默认为'所有'）\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // 获取当前范围\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // 获取摁下绑定键的键值\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n}\n\nfunction getPressedKeyString() {\n  return _downKeys.map(function (c) {\n    return getKey(c) || getModifier(c) || String.fromCharCode(c);\n  });\n} // 表单控件控件判断 返回 Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || (tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // 判断摁下的键是否为某个键，返回true或者false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // 转换成键码\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // 循环删除handlers中的所有 scope(范围)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // 没有指定scope，获取scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // 如果scope被删除，将scope重置为all\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // 清除修饰键\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // 从列表中清除按压过的键\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // 将修饰键重置为false\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n}\n\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (typeof keysInfo === 'undefined') {\n    Object.keys(_handlers).forEach(function (key) {\n      return delete _handlers[key];\n    });\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(function (info) {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    } // support old method\n    // eslint-disable-line\n\n\n    var scope = args[0],\n        method = args[1];\n\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n\n    eachUnbind({\n      key: keysInfo,\n      scope: scope,\n      method: method,\n      splitKey: '+'\n    });\n  }\n} // 解除绑定某个范围的快捷键\n\n\nvar eachUnbind = function eachUnbind(_ref) {\n  var key = _ref.key,\n      scope = _ref.scope,\n      method = _ref.method,\n      _ref$splitKey = _ref.splitKey,\n      splitKey = _ref$splitKey === void 0 ? '+' : _ref$splitKey;\n  var multipleKeys = getKeys(key);\n  multipleKeys.forEach(function (originKey) {\n    var unbindKeys = originKey.split(splitKey);\n    var len = unbindKeys.length;\n    var lastKey = unbindKeys[len - 1];\n    var keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return; // 判断是否传入范围，没有就获取范围\n\n    if (!scope) scope = getScope();\n    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    _handlers[keyCode] = _handlers[keyCode].filter(function (record) {\n      // 通过函数判断，是否解除绑定，函数相等直接返回\n      var isMatchingMethod = method ? record.method === method : true;\n      return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));\n    });\n  });\n}; // 对监听对应快捷键的回调函数进行处理\n\n\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n\n  var modifiersMatch; // 看它是否在当前范围\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // 检查是否匹配修饰符（如果有返回true）\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    } // 调用处理程序，如果是修饰键不做处理\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // 处理keydown事件\n\n\nfunction dispatch(event, element) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // 表单控件过滤 默认表单控件不触发快捷键\n\n  if (!hotkeys.filter.call(this, event)) return; // Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致\n  // Webkit左右 command 键值不一样\n\n  if (key === 93 || key === 224) key = 91;\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n\n  ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'].forEach(function (keyName) {\n    var keyNum = modifierMap[keyName];\n\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName] && _downKeys.length === 3) {\n      /**\n       * Fix if Command is pressed:\n       * ===============================\n       */\n      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {\n        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));\n      }\n    }\n  });\n  /**\n   * -------------------------------\n   */\n\n  if (key in _mods) {\n    _mods[key] = true; // 将特殊字符的key注册到 hotkeys 上\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // 将 modifierMap 里面的修饰键绑定到 event 中\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type μ.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n\n\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n\n    _mods[17] = true;\n    _mods[18] = true;\n  } // 获取范围 默认为 `all`\n\n\n  var scope = getScope(); // 对任何快捷键都需要做的处理\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  } // key 不在 _handlers 中返回\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var record = _handlers[key][_i];\n        var splitKey = record.splitKey;\n        var keyShortcut = record.key.split(splitKey);\n        var _downKeysCurrent = []; // 记录当前按键键值\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // 找到处理内容\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n} // 判断 element 是否已经绑定事件\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  var keys = getKeys(key); // 需要处理的快捷键列表\n\n  var mods = [];\n  var scope = 'all'; // scope默认为all，所有范围都有效\n\n  var element = document; // 快捷键事件绑定节点\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true;\n  var splitKey = '+';\n  var capture = false; // 对为设定范围的判断\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown !== undefined) keydown = option.keydown; // eslint-disable-line\n\n    if (option.capture !== undefined) capture = option.capture; // eslint-disable-line\n\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // 对于每个快捷键进行处理\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // 按键列表\n\n    mods = []; // 如果是组合快捷键取得组合快捷键\n\n    if (key.length > 1) mods = getMods(_modifier, key); // 将非修饰键转化为键码\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *表示匹配所有快捷键\n    // 判断key是否在_handlers中，不在就赋一个空数组\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i],\n      splitKey: splitKey,\n      element: element\n    });\n  } // 在全局document上设置快捷键\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e, element);\n    }, capture);\n\n    if (!winListendFocus) {\n      winListendFocus = true;\n      addEvent(window, 'focus', function () {\n        _downKeys = [];\n      }, capture);\n    }\n\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e, element);\n      clearModifier(e);\n    }, capture);\n  }\n}\n\nfunction trigger(shortcut) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(function (key) {\n    var dataList = _handlers[key].filter(function (item) {\n      return item.scope === scope && item.shortcut === shortcut;\n    });\n\n    dataList.forEach(function (data) {\n      if (data && data.method) {\n        data.method();\n      }\n    });\n  });\n}\n\nvar _api = {\n  getPressedKeyString: getPressedKeyString,\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  trigger: trigger,\n  unbind: unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap: modifierMap\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };","map":{"version":3,"names":["isff","navigator","userAgent","toLowerCase","indexOf","addEvent","object","event","method","useCapture","addEventListener","attachEvent","concat","window","getMods","modifier","key","mods","slice","length","i","getKeys","replace","keys","split","index","lastIndexOf","splice","compareArray","a1","a2","arr1","arr2","isIndex","_keyMap","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","ins","insert","home","end","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementHasBindEvent","code","x","toUpperCase","charCodeAt","getKey","Object","find","getModifier","setScope","scope","getScope","getPressedKeyCodes","getPressedKeyString","map","c","String","fromCharCode","filter","target","srcElement","tagName","flag","isContentEditable","readOnly","isPressed","keyCode","deleteScope","newScope","handlers","prototype","hasOwnProperty","call","clearModifier","which","charCode","hotkeys","unbind","keysInfo","forEach","Array","isArray","info","eachUnbind","_len","arguments","args","_key","splitKey","_ref","_ref$splitKey","multipleKeys","originKey","unbindKeys","len","lastKey","record","isMatchingMethod","eventHandler","handler","element","modifiersMatch","y","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","asterisk","push","keyName","keyNum","e","getModifierState","type","keydown","keyup","_i","keyShortcut","_downKeysCurrent","a","sort","join","isElementBind","document","capture","undefined","toString","trigger","dataList","item","data","_api","keyMap","_hotkeys","noConflict","deep","default"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/hotkeys-js/dist/hotkeys.esm.js"],"sourcesContent":["/**! \n * hotkeys-js v3.10.1 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2022 kenny wong <wowohoo@qq.com> \n * http://jaywcjlove.github.io/hotkeys \n * Licensed under the MIT license \n */\n\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // 绑定事件\n\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // 修饰键转换成对应的键码\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // 处理传的key字符串转换成数组\n\n\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // 匹配任何空白字符,包括空格、制表符、换页符等等\n\n  var keys = key.split(','); // 同时设置多个快捷键，以','分割\n\n  var index = keys.lastIndexOf(''); // 快捷键可能包含','，需特殊处理\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // 比较修饰键的数组\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  backspace: 8,\n  '⌫': 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  '↩': 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n}; // Modifier Keys\n\nvar _modifier = {\n  // shiftKey\n  '⇧': 16,\n  shift: 16,\n  // altKey\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '⌘': 91,\n  cmd: 91,\n  command: 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nvar _handlers = {}; // F1~F12 special key\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\nvar _downKeys = []; // 记录摁下的绑定键\n\nvar winListendFocus = false; // window是否已经监听了focus事件\n\nvar _scope = 'all'; // 默认热键范围\n\nvar elementHasBindEvent = []; // 已绑定事件的节点记录\n// 返回键码\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n};\n\nvar getKey = function getKey(x) {\n  return Object.keys(_keyMap).find(function (k) {\n    return _keyMap[k] === x;\n  });\n};\n\nvar getModifier = function getModifier(x) {\n  return Object.keys(_modifier).find(function (k) {\n    return _modifier[k] === x;\n  });\n}; // 设置获取当前范围（默认为'所有'）\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // 获取当前范围\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // 获取摁下绑定键的键值\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n}\n\nfunction getPressedKeyString() {\n  return _downKeys.map(function (c) {\n    return getKey(c) || getModifier(c) || String.fromCharCode(c);\n  });\n} // 表单控件控件判断 返回 Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || (tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // 判断摁下的键是否为某个键，返回true或者false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // 转换成键码\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // 循环删除handlers中的所有 scope(范围)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // 没有指定scope，获取scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // 如果scope被删除，将scope重置为all\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // 清除修饰键\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // 从列表中清除按压过的键\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // 将修饰键重置为false\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n}\n\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (typeof keysInfo === 'undefined') {\n    Object.keys(_handlers).forEach(function (key) {\n      return delete _handlers[key];\n    });\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(function (info) {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // support old method\n    // eslint-disable-line\n    var scope = args[0],\n        method = args[1];\n\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n\n    eachUnbind({\n      key: keysInfo,\n      scope: scope,\n      method: method,\n      splitKey: '+'\n    });\n  }\n} // 解除绑定某个范围的快捷键\n\n\nvar eachUnbind = function eachUnbind(_ref) {\n  var key = _ref.key,\n      scope = _ref.scope,\n      method = _ref.method,\n      _ref$splitKey = _ref.splitKey,\n      splitKey = _ref$splitKey === void 0 ? '+' : _ref$splitKey;\n  var multipleKeys = getKeys(key);\n  multipleKeys.forEach(function (originKey) {\n    var unbindKeys = originKey.split(splitKey);\n    var len = unbindKeys.length;\n    var lastKey = unbindKeys[len - 1];\n    var keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return; // 判断是否传入范围，没有就获取范围\n\n    if (!scope) scope = getScope();\n    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    _handlers[keyCode] = _handlers[keyCode].filter(function (record) {\n      // 通过函数判断，是否解除绑定，函数相等直接返回\n      var isMatchingMethod = method ? record.method === method : true;\n      return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));\n    });\n  });\n}; // 对监听对应快捷键的回调函数进行处理\n\n\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n\n  var modifiersMatch; // 看它是否在当前范围\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // 检查是否匹配修饰符（如果有返回true）\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    } // 调用处理程序，如果是修饰键不做处理\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // 处理keydown事件\n\n\nfunction dispatch(event, element) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // 表单控件过滤 默认表单控件不触发快捷键\n\n  if (!hotkeys.filter.call(this, event)) return; // Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致\n  // Webkit左右 command 键值不一样\n\n  if (key === 93 || key === 224) key = 91;\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n\n  ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'].forEach(function (keyName) {\n    var keyNum = modifierMap[keyName];\n\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName] && _downKeys.length === 3) {\n      /**\n       * Fix if Command is pressed:\n       * ===============================\n       */\n      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {\n        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));\n      }\n    }\n  });\n  /**\n   * -------------------------------\n   */\n\n  if (key in _mods) {\n    _mods[key] = true; // 将特殊字符的key注册到 hotkeys 上\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // 将 modifierMap 里面的修饰键绑定到 event 中\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type μ.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n\n\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n\n    _mods[17] = true;\n    _mods[18] = true;\n  } // 获取范围 默认为 `all`\n\n\n  var scope = getScope(); // 对任何快捷键都需要做的处理\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  } // key 不在 _handlers 中返回\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var record = _handlers[key][_i];\n        var splitKey = record.splitKey;\n        var keyShortcut = record.key.split(splitKey);\n        var _downKeysCurrent = []; // 记录当前按键键值\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // 找到处理内容\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n} // 判断 element 是否已经绑定事件\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  var keys = getKeys(key); // 需要处理的快捷键列表\n\n  var mods = [];\n  var scope = 'all'; // scope默认为all，所有范围都有效\n\n  var element = document; // 快捷键事件绑定节点\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true;\n  var splitKey = '+';\n  var capture = false; // 对为设定范围的判断\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown !== undefined) keydown = option.keydown; // eslint-disable-line\n\n    if (option.capture !== undefined) capture = option.capture; // eslint-disable-line\n\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // 对于每个快捷键进行处理\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // 按键列表\n\n    mods = []; // 如果是组合快捷键取得组合快捷键\n\n    if (key.length > 1) mods = getMods(_modifier, key); // 将非修饰键转化为键码\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *表示匹配所有快捷键\n    // 判断key是否在_handlers中，不在就赋一个空数组\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i],\n      splitKey: splitKey,\n      element: element\n    });\n  } // 在全局document上设置快捷键\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e, element);\n    }, capture);\n\n    if (!winListendFocus) {\n      winListendFocus = true;\n      addEvent(window, 'focus', function () {\n        _downKeys = [];\n      }, capture);\n    }\n\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e, element);\n      clearModifier(e);\n    }, capture);\n  }\n}\n\nfunction trigger(shortcut) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(function (key) {\n    var dataList = _handlers[key].filter(function (item) {\n      return item.scope === scope && item.shortcut === shortcut;\n    });\n\n    dataList.forEach(function (data) {\n      if (data && data.method) {\n        data.method();\n      }\n    });\n  });\n}\n\nvar _api = {\n  getPressedKeyString: getPressedKeyString,\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  trigger: trigger,\n  unbind: unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap: modifierMap\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}