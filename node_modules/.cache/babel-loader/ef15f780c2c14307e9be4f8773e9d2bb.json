{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction useMountedRef() {\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n}\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var mountedRef = useMountedRef();\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var node = nodeRef.current; // The child might render null.\n\n    if (!node) {\n      return;\n    }\n\n    var doc = ownerDocument(node);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !node.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","map":{"version":3,"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","useEventCallback","elementAcceptingRef","exactProp","useMountedRef","mountedRef","useRef","useEffect","current","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","_props$mouseEvent","mouseEvent","_props$touchEvent","touchEvent","onClickAway","movedRef","nodeRef","handleOwnRef","useCallback","instance","findDOMNode","handleRef","ref","handleClickAway","event","defaultPrevented","node","doc","documentElement","contains","target","handleTouchMove","mappedTouchEvent","document","addEventListener","removeEventListener","undefined","mappedMouseEvent","createElement","Fragment","cloneElement","process","env","NODE_ENV","propTypes","isRequired","oneOf","func"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction useMountedRef() {\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n}\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var mountedRef = useMountedRef();\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = useEventCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var node = nodeRef.current; // The child might render null.\n\n    if (!node) {\n      return;\n    }\n\n    var doc = ownerDocument(node);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !node.contains(event.target)) {\n      onClickAway(event);\n    }\n  });\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;"],"mappings":"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"},"metadata":{},"sourceType":"module"}