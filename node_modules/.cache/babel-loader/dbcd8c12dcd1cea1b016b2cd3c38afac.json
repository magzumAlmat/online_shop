{"ast":null,"code":"import URL$1 from 'url-parser-lite';\nimport querystring from 'querystring';\nimport fetch from 'cross-fetch';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction contains(string, substring) {\n  return string.indexOf(substring) !== -1;\n}\n\nfunction isAppbase(url) {\n  return contains(url, 'scalr.api.appbase.io');\n}\n\nfunction btoa() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var str = input;\n  var output = ''; // eslint-disable-next-line\n\n  for (var block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); // eslint-disable-line no-bitwise\n  output += map.charAt(63 & block >> 8 - i % 1 * 8) // eslint-disable-line no-bitwise\n  ) {\n    charCode = str.charCodeAt(i += 3 / 4);\n\n    if (charCode > 0xff) {\n      throw new Error('\"btoa\" failed: The string to be encoded contains characters outside of the Latin1 range.');\n    }\n\n    block = block << 8 | charCode; // eslint-disable-line no-bitwise\n  }\n\n  return output;\n}\n\nfunction validateRSQuery(query) {\n  if (query && Object.prototype.toString.call(query) === '[object Array]') {\n    for (var i = 0; i < query.length; i += 1) {\n      var q = query[i];\n\n      if (q) {\n        if (!q.id) {\n          return new Error(\"'id' field must be present in query object\");\n        }\n      } else {\n        return new Error('query object can not have an empty value');\n      }\n    }\n\n    return true;\n  }\n\n  return new Error(\"invalid query value, 'query' value must be an array\");\n}\n\nfunction validate(object, fields) {\n  var invalid = [];\n  var emptyFor = {\n    object: null,\n    string: '',\n    number: 0\n  };\n  var keys = Object.keys(fields);\n  keys.forEach(function (key) {\n    var types = fields[key].split('|');\n    var matchedType = types.find(function (type) {\n      return (// eslint-disable-next-line\n        _typeof(object[key]) === type\n      );\n    });\n\n    if (!matchedType || object[key] === emptyFor[matchedType]) {\n      invalid.push(key);\n    }\n  });\n  var missing = '';\n\n  for (var i = 0; i < invalid.length; i += 1) {\n    missing += invalid[i] + ', ';\n  }\n\n  if (invalid.length > 0) {\n    return new Error('fields missing: ' + missing);\n  }\n\n  return true;\n}\n\nfunction removeUndefined() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (value || !(Object.keys(value).length === 0 && value.constructor === Object)) {\n    return JSON.parse(JSON.stringify(value));\n  }\n\n  return null;\n}\n\nfunction encodeHeaders() {\n  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true; // Encode headers\n\n  var encodedHeaders = {};\n\n  if (shouldEncode) {\n    Object.keys(headers).forEach(function (header) {\n      encodedHeaders[header] = encodeURI(headers[header]);\n    });\n  } else {\n    encodedHeaders = headers;\n  }\n\n  return encodedHeaders;\n}\n\nfunction getMongoRequest(app, mongo) {\n  var mongodb = {};\n\n  if (app) {\n    mongodb.index = app;\n  }\n\n  if (mongo) {\n    if (mongo.db) {\n      mongodb.db = mongo.db;\n    }\n\n    if (mongo.collection) {\n      mongodb.collection = mongo.collection;\n    }\n  }\n\n  return mongodb;\n}\n\nfunction getTelemetryHeaders(enableTelemetry, shouldSetHeaders) {\n  var headers = {};\n\n  if (!shouldSetHeaders) {\n    return headers;\n  }\n\n  Object.assign(headers, {\n    'X-Search-Client': 'Appbase JS'\n  });\n\n  if (enableTelemetry === false) {\n    Object.assign(headers, {\n      'X-Enable-Telemetry': enableTelemetry\n    });\n  }\n\n  return headers;\n}\n\nvar backendAlias = {\n  MONGODB: 'mongodb',\n  // mongodb\n  ELASTICSEARCH: 'elasticsearch' // elasticsearch\n\n};\nvar dataTypes = {\n  ARRAY: 'array',\n  FUNCTION: 'function',\n  OBJECT: 'object',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n  STRING: 'string'\n};\n\nvar checkDataType = function checkDataType(temp) {\n  // eslint-disable-next-line\n  if ((typeof temp === 'undefined' ? 'undefined' : _typeof(temp)) === dataTypes.OBJECT) {\n    if (Array.isArray(temp)) {\n      return dataTypes.ARRAY;\n    }\n\n    return dataTypes.OBJECT;\n  }\n\n  return typeof temp === 'undefined' ? 'undefined' : _typeof(temp);\n};\n\nfunction validateSchema() {\n  var passedProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var backendName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var passedPropertiesKeys = Object.keys(passedProperties).filter(function (propertyKey) {\n    return !!passedProperties[propertyKey];\n  });\n  var acceptedProperties = Object.keys(schema);\n  var requiredProperties = []; // fetch required properties\n\n  acceptedProperties.forEach(function (propName) {\n    var currentProperty = schema[propName];\n\n    if (currentProperty.required) {\n      requiredProperties.push(propName);\n    }\n  }); // check for required properties\n\n  requiredProperties.forEach(function (requiredProperty) {\n    if (!passedPropertiesKeys.includes(requiredProperty)) {\n      throw new Error(requiredProperty + ' is required when using the ' + backendName + ' Search backend.');\n    }\n  }); // check for accepted properties\n\n  passedPropertiesKeys.forEach(function (passedPropertyKey) {\n    if (!acceptedProperties.includes(passedPropertyKey)) {\n      throw new Error(passedPropertyKey + ' property isn\\'t accepted property by ' + backendName + ' backend.');\n    }\n\n    var acceptedTypes = Array.isArray(schema[passedPropertyKey].type) ? schema[passedPropertyKey].type : [].concat(schema[passedPropertyKey].type);\n    var receivedPropertyType = checkDataType(passedProperties[passedPropertyKey]);\n\n    if (!acceptedTypes.includes(receivedPropertyType)) {\n      throw new Error('The property ' + passedPropertyKey + ' is expected with type(s) [' + acceptedTypes.join(', ') + '], but type was set as ' + receivedPropertyType + '.');\n    }\n  });\n}\n\nfunction isValidHttpUrl(string) {\n  var url = void 0;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\n\nvar mongodb = {\n  url: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false\n  },\n  mongodb: {\n    type: dataTypes.OBJECT,\n    required: true\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false\n  }\n};\nvar elasticsearch = {\n  url: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false\n  }\n};\nvar SCHEMA = {\n  mongodb: mongodb,\n  elasticsearch: elasticsearch\n};\n/**\n * Returns an instance of Appbase client\n * @param {Object} config To configure properties\n * @param {String} config.url\n * @param {String} config.app\n * @param {String} config.credentials\n * @param {String} config.username\n * @param {String} config.password\n * @param {Boolean} config.enableTelemetry\n * @param {Object} config.mongodb\n * @param {Object} config.endpoint\n * A callback function which will be invoked before a fetch request made\n */\n\nfunction AppBase(config) {\n  var _URL = URL$1((config.endpoint ? config.endpoint.url : config.url) || ''),\n      _URL$auth = _URL.auth,\n      auth = _URL$auth === undefined ? null : _URL$auth,\n      _URL$host = _URL.host,\n      host = _URL$host === undefined ? '' : _URL$host,\n      _URL$path = _URL.path,\n      path = _URL$path === undefined ? '' : _URL$path,\n      _URL$protocol = _URL.protocol,\n      protocol = _URL$protocol === undefined ? '' : _URL$protocol;\n\n  var url = config.url;\n  url = host + path; // Parse url\n\n  if (url.slice(-1) === '/') {\n    url = url.slice(0, -1);\n  }\n\n  var backendName = backendAlias[config.mongodb ? 'MONGODB' : 'ELASTICSEARCH']; // eslint-disable-next-line\n\n  var schema = SCHEMA[backendName];\n\n  if (config.endpoint && isValidHttpUrl(config.endpoint.url)) {\n    schema.url.required = false;\n    schema.app.required = false;\n    schema.credentials.required = false;\n  }\n\n  validateSchema({\n    url: config.url,\n    app: config.app,\n    credentials: config.credentials,\n    username: config.username,\n    password: config.password,\n    enableTelemetry: config.enableTelemetry,\n    mongodb: config.mongodb\n  }, schema, backendName);\n\n  if (typeof protocol !== 'string' || protocol === '') {\n    throw new Error('Protocol is not present in url. URL should be of the form https://appbase-demo-ansible-abxiydt-arc.searchbase.io');\n  }\n\n  var credentials = auth || null;\n  /**\n   * Credentials can be provided as a part of the URL,\n   * as username, password args or as a credentials argument directly */\n\n  if (typeof config.credentials === 'string' && config.credentials !== '') {\n    // eslint-disable-next-line\n    credentials = config.credentials;\n  } else if (typeof config.username === 'string' && config.username !== '' && typeof config.password === 'string' && config.password !== '') {\n    credentials = config.username + ':' + config.password;\n  }\n\n  if (!config.mongodb) {\n    if (isAppbase(url) && credentials === null) {\n      throw new Error('Authentication information is not present. Did you add credentials?');\n    }\n  }\n\n  this.url = url;\n  this.protocol = protocol;\n  this.app = config.app;\n  this.credentials = credentials;\n\n  if (config.mongodb) {\n    this.mongodb = config.mongodb;\n  }\n\n  if (typeof config.enableTelemetry === 'boolean') {\n    this.enableTelemetry = config.enableTelemetry;\n  }\n}\n/**\n * To perform fetch request\n * @param {Object} args\n * @param {String} args.method\n * @param {String} args.path\n * @param {Object} args.params\n * @param {Object} args.body\n * @param {Object} args.headers\n * @param {boolean} args.isSuggestionsAPI\n */\n\n\nfunction fetchRequest(args) {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    var parsedArgs = removeUndefined(args);\n\n    try {\n      var method = parsedArgs.method,\n          path = parsedArgs.path,\n          params = parsedArgs.params,\n          body = parsedArgs.body,\n          isRSAPI = parsedArgs.isRSAPI,\n          isSuggestionsAPI = parsedArgs.isSuggestionsAPI,\n          _parsedArgs$isMongoRe = parsedArgs.isMongoRequest,\n          isMongoRequest = _parsedArgs$isMongoRe === undefined ? false : _parsedArgs$isMongoRe;\n      var app = isSuggestionsAPI ? '.suggestions' : _this.app;\n      var bodyCopy = body;\n      var contentType = path.endsWith('msearch') || path.endsWith('bulk') ? 'application/x-ndjson' : 'application/json';\n      var headers = Object.assign({}, {\n        Accept: 'application/json',\n        'Content-Type': contentType\n      }, args.headers, _this.headers);\n      var timestamp = Date.now();\n\n      if (_this.credentials) {\n        headers.Authorization = 'Basic ' + btoa(_this.credentials);\n      }\n\n      var requestOptions = {\n        method: method,\n        headers: headers\n      };\n\n      if (Array.isArray(bodyCopy)) {\n        var arrayBody = '';\n        bodyCopy.forEach(function (item) {\n          arrayBody += JSON.stringify(item);\n          arrayBody += '\\n';\n        });\n        bodyCopy = arrayBody;\n      } else {\n        bodyCopy = JSON.stringify(bodyCopy) || {};\n      }\n\n      if (Object.keys(bodyCopy).length !== 0) {\n        requestOptions.body = bodyCopy;\n      }\n\n      var handleTransformRequest = function handleTransformRequest(res) {\n        if (_this.transformRequest && typeof _this.transformRequest === 'function') {\n          var tarnsformRequestPromise = _this.transformRequest(res);\n\n          return tarnsformRequestPromise instanceof Promise ? tarnsformRequestPromise : Promise.resolve(tarnsformRequestPromise);\n        }\n\n        return Promise.resolve(res);\n      };\n\n      var responseHeaders = {};\n      var paramsString = '';\n\n      if (params) {\n        paramsString = '?' + querystring.stringify(params);\n      }\n\n      var finalURL = isMongoRequest ? _this.protocol + '://' + _this.url : _this.protocol + '://' + _this.url + '/' + app + '/' + path + paramsString;\n      return handleTransformRequest(Object.assign({}, {\n        url: finalURL\n      }, requestOptions)).then(function (ts) {\n        var transformedRequest = Object.assign({}, ts);\n        var url = transformedRequest.url;\n        delete transformedRequest.url;\n        return fetch(url || finalURL, Object.assign({}, transformedRequest, {\n          // apply timestamp header for RS API\n          headers: isRSAPI && !isMongoRequest ? Object.assign({}, transformedRequest.headers, {\n            'x-timestamp': new Date().getTime()\n          }) : transformedRequest.headers\n        })).then(function (res) {\n          if (res.status >= 500) {\n            return reject(res);\n          }\n\n          responseHeaders = res.headers;\n          return res.json().then(function (data) {\n            if (res.status >= 400) {\n              return reject(res);\n            }\n\n            if (data && data.error) {\n              return reject(data);\n            } // Handle error from RS API RESPONSE\n\n\n            if (isRSAPI && data && Object.prototype.toString.call(data) === '[object Object]') {\n              if (body && body.query && body.query instanceof Array) {\n                var errorResponses = 0;\n                var allResponses = body.query.filter(function (q) {\n                  return q.execute || q.execute === undefined;\n                }).length;\n\n                if (data) {\n                  Object.keys(data).forEach(function (key) {\n                    if (data[key] && Object.prototype.hasOwnProperty.call(data[key], 'error') && !!data[key].error) {\n                      errorResponses += 1;\n                    }\n                  });\n                } // reject only when all responses has error\n\n\n                if (errorResponses > 0 && allResponses === errorResponses) {\n                  return reject(data);\n                }\n              }\n            } // Handle error from _msearch response\n\n\n            if (data && data.responses instanceof Array) {\n              var _allResponses = data.responses.length;\n              var _errorResponses = data.responses.filter(function (entry) {\n                return Object.prototype.hasOwnProperty.call(entry, 'error');\n              }).length; // reject only when all responses has error\n\n              if (_allResponses === _errorResponses) {\n                return reject(data);\n              }\n            }\n\n            var response = Object.assign({}, data, {\n              _timestamp: timestamp,\n              _headers: responseHeaders\n            });\n            return resolve(response);\n          }).catch(function (e) {\n            return reject(e);\n          });\n        }).catch(function (e) {\n          return reject(e);\n        });\n      }).catch(function (err) {\n        return reject(err);\n      });\n    } catch (e) {\n      return reject(e);\n    }\n  });\n}\n/**\n * Index Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\n\n\nfunction indexApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id,\n      body = parsedArgs.body;\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  delete parsedArgs.id;\n  var path = void 0;\n\n  if (id) {\n    path = type ? type + '/' + encodeURIComponent(id) : encodeURIComponent(id);\n  } else {\n    path = type;\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n/**\n * Get Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\n\n\nfunction getApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    id: 'string|number'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id;\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n  var path = type + '/' + encodeURIComponent(id);\n  return this.performFetchRequest({\n    method: 'GET',\n    path: path,\n    params: parsedArgs\n  });\n}\n/**\n * Update Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\n\n\nfunction updateApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    id: 'string|number',\n    body: 'object'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id,\n      body = parsedArgs.body;\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n  delete parsedArgs.body;\n  var path = type + '/' + encodeURIComponent(id) + '/_update';\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n/**\n * Delete Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\n\n\nfunction deleteApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    id: 'string|number'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id;\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n  var path = type + '/' + encodeURIComponent(id);\n  return this.performFetchRequest({\n    method: 'DELETE',\n    path: path,\n    params: parsedArgs\n  });\n}\n/**\n * Bulk Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\n\n\nfunction bulkApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = parsedArgs.type,\n      body = parsedArgs.body;\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  var path = void 0;\n\n  if (type) {\n    path = type + '/_bulk';\n  } else {\n    path = '_bulk';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n/**\n * Search Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\n\n\nfunction searchApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = void 0;\n\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    // eslint-disable-next-line\n    type = parsedArgs.type;\n  }\n\n  var body = parsedArgs.body;\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  var path = void 0;\n\n  if (type) {\n    path = type + '/_search';\n  } else {\n    path = '_search';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n/**\n * Msearch Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\n\n\nfunction msearchApi(args) {\n  var parsedArgs = removeUndefined(args); // Validate arguments\n\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = void 0;\n\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    type = parsedArgs.type;\n  }\n\n  var body = parsedArgs.body;\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  var path = void 0;\n\n  if (type) {\n    path = type + '/_msearch';\n  } else {\n    path = '_msearch';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\n\n\nfunction reactiveSearchApi(query, settings, params) {\n  var parsedSettings = removeUndefined(settings); // Validate query\n\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, {\n      mongodb: getMongoRequest(this.app, this.mongodb)\n    });\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n    params: params\n  });\n}\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\n\n\nfunction reactiveSearchv3Api(query, settings, params) {\n  var parsedSettings = removeUndefined(settings); // Validate query\n\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, {\n      mongodb: getMongoRequest(this.app, this.mongodb)\n    });\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n    params: params\n  });\n}\n/**\n * To get mappings\n */\n\n\nfunction getMappings() {\n  return this.performFetchRequest({\n    method: 'GET',\n    path: '_mapping'\n  });\n}\n/**\n * ReactiveSearch suggestions API for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\n\n\nfunction getSuggestionsv3Api(query, settings) {\n  var parsedSettings = removeUndefined(settings); // Validate query\n\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, {\n      mongodb: getMongoRequest(this.app, this.mongodb)\n    });\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry),\n    isRSAPI: true,\n    isSuggestionsAPI: true,\n    isMongoRequest: !!this.mongodb\n  });\n}\n\nfunction appbasejs(config) {\n  var client = new AppBase(config);\n  AppBase.prototype.performFetchRequest = fetchRequest;\n  AppBase.prototype.index = indexApi;\n  AppBase.prototype.get = getApi;\n  AppBase.prototype.update = updateApi;\n  AppBase.prototype.delete = deleteApi;\n  AppBase.prototype.bulk = bulkApi;\n  AppBase.prototype.search = searchApi;\n  AppBase.prototype.msearch = msearchApi;\n  AppBase.prototype.reactiveSearch = reactiveSearchApi;\n  AppBase.prototype.reactiveSearchv3 = reactiveSearchv3Api;\n  AppBase.prototype.getQuerySuggestions = getSuggestionsv3Api;\n  AppBase.prototype.getMappings = getMappings;\n\n  AppBase.prototype.setHeaders = function setHeaders() {\n    var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false; // Encode headers\n\n    if (shouldEncode) {\n      this.headers = encodeHeaders(headers);\n    } else {\n      this.headers = headers;\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Appbase = client;\n  }\n\n  return client;\n}\n\nexport default appbasejs;","map":{"version":3,"names":["URL$1","querystring","fetch","_typeof","Symbol","iterator","obj","constructor","prototype","contains","string","substring","indexOf","isAppbase","url","btoa","input","arguments","length","undefined","chars","str","output","block","charCode","i","map","charAt","charCodeAt","Error","validateRSQuery","query","Object","toString","call","q","id","validate","object","fields","invalid","emptyFor","number","keys","forEach","key","types","split","matchedType","find","type","push","missing","removeUndefined","value","JSON","parse","stringify","encodeHeaders","headers","shouldEncode","encodedHeaders","header","encodeURI","getMongoRequest","app","mongo","mongodb","index","db","collection","getTelemetryHeaders","enableTelemetry","shouldSetHeaders","assign","backendAlias","MONGODB","ELASTICSEARCH","dataTypes","ARRAY","FUNCTION","OBJECT","NUMBER","BOOLEAN","STRING","checkDataType","temp","Array","isArray","validateSchema","passedProperties","schema","backendName","passedPropertiesKeys","filter","propertyKey","acceptedProperties","requiredProperties","propName","currentProperty","required","requiredProperty","includes","passedPropertyKey","acceptedTypes","concat","receivedPropertyType","join","isValidHttpUrl","URL","_","protocol","credentials","username","password","elasticsearch","SCHEMA","AppBase","config","_URL","endpoint","_URL$auth","auth","_URL$host","host","_URL$path","path","_URL$protocol","slice","fetchRequest","args","_this","Promise","resolve","reject","parsedArgs","method","params","body","isRSAPI","isSuggestionsAPI","_parsedArgs$isMongoRe","isMongoRequest","bodyCopy","contentType","endsWith","Accept","timestamp","Date","now","Authorization","requestOptions","arrayBody","item","handleTransformRequest","res","transformRequest","tarnsformRequestPromise","responseHeaders","paramsString","finalURL","then","ts","transformedRequest","getTime","status","json","data","error","errorResponses","allResponses","execute","hasOwnProperty","responses","_allResponses","_errorResponses","entry","response","_timestamp","_headers","catch","e","err","indexApi","valid","_parsedArgs$type","encodeURIComponent","performFetchRequest","getApi","updateApi","deleteApi","bulkApi","searchApi","msearchApi","reactiveSearchApi","settings","parsedSettings","reactiveSearchv3Api","getMappings","getSuggestionsv3Api","appbasejs","client","get","update","delete","bulk","search","msearch","reactiveSearch","reactiveSearchv3","getQuerySuggestions","setHeaders","window","Appbase"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/appbase-js/dist/appbase-js.es.js"],"sourcesContent":["import URL$1 from 'url-parser-lite';\nimport querystring from 'querystring';\nimport fetch from 'cross-fetch';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction contains(string, substring) {\n  return string.indexOf(substring) !== -1;\n}\nfunction isAppbase(url) {\n  return contains(url, 'scalr.api.appbase.io');\n}\nfunction btoa() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var str = input;\n  var output = '';\n\n  // eslint-disable-next-line\n  for (var block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); // eslint-disable-line no-bitwise\n  output += map.charAt(63 & block >> 8 - i % 1 * 8) // eslint-disable-line no-bitwise\n  ) {\n    charCode = str.charCodeAt(i += 3 / 4);\n\n    if (charCode > 0xff) {\n      throw new Error('\"btoa\" failed: The string to be encoded contains characters outside of the Latin1 range.');\n    }\n\n    block = block << 8 | charCode; // eslint-disable-line no-bitwise\n  }\n\n  return output;\n}\n\nfunction validateRSQuery(query) {\n  if (query && Object.prototype.toString.call(query) === '[object Array]') {\n    for (var i = 0; i < query.length; i += 1) {\n      var q = query[i];\n      if (q) {\n        if (!q.id) {\n          return new Error(\"'id' field must be present in query object\");\n        }\n      } else {\n        return new Error('query object can not have an empty value');\n      }\n    }\n    return true;\n  }\n  return new Error(\"invalid query value, 'query' value must be an array\");\n}\n\nfunction validate(object, fields) {\n  var invalid = [];\n  var emptyFor = {\n    object: null,\n    string: '',\n    number: 0\n  };\n  var keys = Object.keys(fields);\n  keys.forEach(function (key) {\n    var types = fields[key].split('|');\n    var matchedType = types.find(function (type) {\n      return (\n        // eslint-disable-next-line\n        _typeof(object[key]) === type\n      );\n    });\n    if (!matchedType || object[key] === emptyFor[matchedType]) {\n      invalid.push(key);\n    }\n  });\n  var missing = '';\n  for (var i = 0; i < invalid.length; i += 1) {\n    missing += invalid[i] + ', ';\n  }\n  if (invalid.length > 0) {\n    return new Error('fields missing: ' + missing);\n  }\n\n  return true;\n}\n\nfunction removeUndefined() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (value || !(Object.keys(value).length === 0 && value.constructor === Object)) {\n    return JSON.parse(JSON.stringify(value));\n  }\n  return null;\n}\n\nfunction encodeHeaders() {\n  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  // Encode headers\n  var encodedHeaders = {};\n  if (shouldEncode) {\n    Object.keys(headers).forEach(function (header) {\n      encodedHeaders[header] = encodeURI(headers[header]);\n    });\n  } else {\n    encodedHeaders = headers;\n  }\n  return encodedHeaders;\n}\nfunction getMongoRequest(app, mongo) {\n  var mongodb = {};\n  if (app) {\n    mongodb.index = app;\n  }\n  if (mongo) {\n    if (mongo.db) {\n      mongodb.db = mongo.db;\n    }\n    if (mongo.collection) {\n      mongodb.collection = mongo.collection;\n    }\n  }\n  return mongodb;\n}\n\nfunction getTelemetryHeaders(enableTelemetry, shouldSetHeaders) {\n  var headers = {};\n  if (!shouldSetHeaders) {\n    return headers;\n  }\n  Object.assign(headers, {\n    'X-Search-Client': 'Appbase JS'\n  });\n\n  if (enableTelemetry === false) {\n    Object.assign(headers, {\n      'X-Enable-Telemetry': enableTelemetry\n    });\n  }\n\n  return headers;\n}\n\nvar backendAlias = {\n  MONGODB: 'mongodb', // mongodb\n  ELASTICSEARCH: 'elasticsearch' // elasticsearch\n};\nvar dataTypes = {\n  ARRAY: 'array',\n  FUNCTION: 'function',\n  OBJECT: 'object',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n  STRING: 'string'\n};\nvar checkDataType = function checkDataType(temp) {\n  // eslint-disable-next-line\n  if ((typeof temp === 'undefined' ? 'undefined' : _typeof(temp)) === dataTypes.OBJECT) {\n    if (Array.isArray(temp)) {\n      return dataTypes.ARRAY;\n    }\n\n    return dataTypes.OBJECT;\n  }\n  return typeof temp === 'undefined' ? 'undefined' : _typeof(temp);\n};\n\nfunction validateSchema() {\n  var passedProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var backendName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  var passedPropertiesKeys = Object.keys(passedProperties).filter(function (propertyKey) {\n    return !!passedProperties[propertyKey];\n  });\n  var acceptedProperties = Object.keys(schema);\n  var requiredProperties = [];\n  // fetch required properties\n  acceptedProperties.forEach(function (propName) {\n    var currentProperty = schema[propName];\n    if (currentProperty.required) {\n      requiredProperties.push(propName);\n    }\n  });\n  // check for required properties\n  requiredProperties.forEach(function (requiredProperty) {\n    if (!passedPropertiesKeys.includes(requiredProperty)) {\n      throw new Error(requiredProperty + ' is required when using the ' + backendName + ' Search backend.');\n    }\n  });\n\n  // check for accepted properties\n  passedPropertiesKeys.forEach(function (passedPropertyKey) {\n    if (!acceptedProperties.includes(passedPropertyKey)) {\n      throw new Error(passedPropertyKey + ' property isn\\'t accepted property by ' + backendName + ' backend.');\n    }\n\n    var acceptedTypes = Array.isArray(schema[passedPropertyKey].type) ? schema[passedPropertyKey].type : [].concat(schema[passedPropertyKey].type);\n    var receivedPropertyType = checkDataType(passedProperties[passedPropertyKey]);\n    if (!acceptedTypes.includes(receivedPropertyType)) {\n      throw new Error('The property ' + passedPropertyKey + ' is expected with type(s) [' + acceptedTypes.join(', ') + '], but type was set as ' + receivedPropertyType + '.');\n    }\n  });\n}\n\nfunction isValidHttpUrl(string) {\n  var url = void 0;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\n\nvar mongodb = {\n  url: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false\n  },\n  mongodb: {\n    type: dataTypes.OBJECT,\n    required: true\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false\n  }\n};\n\nvar elasticsearch = {\n  url: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: true\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false\n  }\n};\n\nvar SCHEMA = { mongodb: mongodb, elasticsearch: elasticsearch };\n\n/**\n * Returns an instance of Appbase client\n * @param {Object} config To configure properties\n * @param {String} config.url\n * @param {String} config.app\n * @param {String} config.credentials\n * @param {String} config.username\n * @param {String} config.password\n * @param {Boolean} config.enableTelemetry\n * @param {Object} config.mongodb\n * @param {Object} config.endpoint\n * A callback function which will be invoked before a fetch request made\n */\nfunction AppBase(config) {\n  var _URL = URL$1((config.endpoint ? config.endpoint.url : config.url) || ''),\n      _URL$auth = _URL.auth,\n      auth = _URL$auth === undefined ? null : _URL$auth,\n      _URL$host = _URL.host,\n      host = _URL$host === undefined ? '' : _URL$host,\n      _URL$path = _URL.path,\n      path = _URL$path === undefined ? '' : _URL$path,\n      _URL$protocol = _URL.protocol,\n      protocol = _URL$protocol === undefined ? '' : _URL$protocol;\n\n  var url = config.url;\n\n  url = host + path;\n  // Parse url\n  if (url.slice(-1) === '/') {\n    url = url.slice(0, -1);\n  }\n  var backendName = backendAlias[config.mongodb ? 'MONGODB' : 'ELASTICSEARCH'];\n  // eslint-disable-next-line\n  var schema = SCHEMA[backendName];\n\n  if (config.endpoint && isValidHttpUrl(config.endpoint.url)) {\n    schema.url.required = false;\n    schema.app.required = false;\n    schema.credentials.required = false;\n  }\n\n  validateSchema({\n    url: config.url,\n    app: config.app,\n    credentials: config.credentials,\n    username: config.username,\n    password: config.password,\n    enableTelemetry: config.enableTelemetry,\n    mongodb: config.mongodb\n  }, schema, backendName);\n\n  if (typeof protocol !== 'string' || protocol === '') {\n    throw new Error('Protocol is not present in url. URL should be of the form https://appbase-demo-ansible-abxiydt-arc.searchbase.io');\n  }\n\n  var credentials = auth || null;\n  /**\n   * Credentials can be provided as a part of the URL,\n   * as username, password args or as a credentials argument directly */\n  if (typeof config.credentials === 'string' && config.credentials !== '') {\n    // eslint-disable-next-line\n    credentials = config.credentials;\n  } else if (typeof config.username === 'string' && config.username !== '' && typeof config.password === 'string' && config.password !== '') {\n    credentials = config.username + ':' + config.password;\n  }\n  if (!config.mongodb) {\n    if (isAppbase(url) && credentials === null) {\n      throw new Error('Authentication information is not present. Did you add credentials?');\n    }\n  }\n\n  this.url = url;\n  this.protocol = protocol;\n  this.app = config.app;\n  this.credentials = credentials;\n  if (config.mongodb) {\n    this.mongodb = config.mongodb;\n  }\n\n  if (typeof config.enableTelemetry === 'boolean') {\n    this.enableTelemetry = config.enableTelemetry;\n  }\n}\n\n/**\n * To perform fetch request\n * @param {Object} args\n * @param {String} args.method\n * @param {String} args.path\n * @param {Object} args.params\n * @param {Object} args.body\n * @param {Object} args.headers\n * @param {boolean} args.isSuggestionsAPI\n */\nfunction fetchRequest(args) {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    var parsedArgs = removeUndefined(args);\n    try {\n      var method = parsedArgs.method,\n          path = parsedArgs.path,\n          params = parsedArgs.params,\n          body = parsedArgs.body,\n          isRSAPI = parsedArgs.isRSAPI,\n          isSuggestionsAPI = parsedArgs.isSuggestionsAPI,\n          _parsedArgs$isMongoRe = parsedArgs.isMongoRequest,\n          isMongoRequest = _parsedArgs$isMongoRe === undefined ? false : _parsedArgs$isMongoRe;\n\n      var app = isSuggestionsAPI ? '.suggestions' : _this.app;\n      var bodyCopy = body;\n      var contentType = path.endsWith('msearch') || path.endsWith('bulk') ? 'application/x-ndjson' : 'application/json';\n      var headers = Object.assign({}, {\n        Accept: 'application/json',\n        'Content-Type': contentType\n      }, args.headers, _this.headers);\n      var timestamp = Date.now();\n      if (_this.credentials) {\n        headers.Authorization = 'Basic ' + btoa(_this.credentials);\n      }\n      var requestOptions = {\n        method: method,\n        headers: headers\n      };\n      if (Array.isArray(bodyCopy)) {\n        var arrayBody = '';\n        bodyCopy.forEach(function (item) {\n          arrayBody += JSON.stringify(item);\n          arrayBody += '\\n';\n        });\n\n        bodyCopy = arrayBody;\n      } else {\n        bodyCopy = JSON.stringify(bodyCopy) || {};\n      }\n\n      if (Object.keys(bodyCopy).length !== 0) {\n        requestOptions.body = bodyCopy;\n      }\n\n      var handleTransformRequest = function handleTransformRequest(res) {\n        if (_this.transformRequest && typeof _this.transformRequest === 'function') {\n          var tarnsformRequestPromise = _this.transformRequest(res);\n          return tarnsformRequestPromise instanceof Promise ? tarnsformRequestPromise : Promise.resolve(tarnsformRequestPromise);\n        }\n        return Promise.resolve(res);\n      };\n\n      var responseHeaders = {};\n\n      var paramsString = '';\n      if (params) {\n        paramsString = '?' + querystring.stringify(params);\n      }\n      var finalURL = isMongoRequest ? _this.protocol + '://' + _this.url : _this.protocol + '://' + _this.url + '/' + app + '/' + path + paramsString;\n\n      return handleTransformRequest(Object.assign({}, {\n        url: finalURL\n      }, requestOptions)).then(function (ts) {\n        var transformedRequest = Object.assign({}, ts);\n        var url = transformedRequest.url;\n\n        delete transformedRequest.url;\n        return fetch(url || finalURL, Object.assign({}, transformedRequest, {\n          // apply timestamp header for RS API\n          headers: isRSAPI && !isMongoRequest ? Object.assign({}, transformedRequest.headers, {\n            'x-timestamp': new Date().getTime()\n          }) : transformedRequest.headers\n        })).then(function (res) {\n          if (res.status >= 500) {\n            return reject(res);\n          }\n          responseHeaders = res.headers;\n          return res.json().then(function (data) {\n            if (res.status >= 400) {\n              return reject(res);\n            }\n            if (data && data.error) {\n              return reject(data);\n            }\n            // Handle error from RS API RESPONSE\n            if (isRSAPI && data && Object.prototype.toString.call(data) === '[object Object]') {\n              if (body && body.query && body.query instanceof Array) {\n                var errorResponses = 0;\n                var allResponses = body.query.filter(function (q) {\n                  return q.execute || q.execute === undefined;\n                }).length;\n\n                if (data) {\n                  Object.keys(data).forEach(function (key) {\n                    if (data[key] && Object.prototype.hasOwnProperty.call(data[key], 'error') && !!data[key].error) {\n                      errorResponses += 1;\n                    }\n                  });\n                }\n                // reject only when all responses has error\n                if (errorResponses > 0 && allResponses === errorResponses) {\n                  return reject(data);\n                }\n              }\n            }\n\n            // Handle error from _msearch response\n            if (data && data.responses instanceof Array) {\n              var _allResponses = data.responses.length;\n              var _errorResponses = data.responses.filter(function (entry) {\n                return Object.prototype.hasOwnProperty.call(entry, 'error');\n              }).length;\n              // reject only when all responses has error\n              if (_allResponses === _errorResponses) {\n                return reject(data);\n              }\n            }\n            var response = Object.assign({}, data, {\n              _timestamp: timestamp,\n              _headers: responseHeaders\n            });\n            return resolve(response);\n          }).catch(function (e) {\n            return reject(e);\n          });\n        }).catch(function (e) {\n          return reject(e);\n        });\n      }).catch(function (err) {\n        return reject(err);\n      });\n    } catch (e) {\n      return reject(e);\n    }\n  });\n}\n\n/**\n * Index Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\nfunction indexApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id,\n      body = parsedArgs.body;\n\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  delete parsedArgs.id;\n\n  var path = void 0;\n  if (id) {\n    path = type ? type + '/' + encodeURIComponent(id) : encodeURIComponent(id);\n  } else {\n    path = type;\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n\n/**\n * Get Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\nfunction getApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    id: 'string|number'\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id;\n\n\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n\n  var path = type + '/' + encodeURIComponent(id);\n\n  return this.performFetchRequest({\n    method: 'GET',\n    path: path,\n    params: parsedArgs\n  });\n}\n\n/**\n * Update Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\nfunction updateApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    id: 'string|number',\n    body: 'object'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id,\n      body = parsedArgs.body;\n\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n  delete parsedArgs.body;\n  var path = type + '/' + encodeURIComponent(id) + '/_update';\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n\n/**\n * Delete Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\nfunction deleteApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    id: 'string|number'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var _parsedArgs$type = parsedArgs.type,\n      type = _parsedArgs$type === undefined ? '_doc' : _parsedArgs$type,\n      id = parsedArgs.id;\n\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n\n  var path = type + '/' + encodeURIComponent(id);\n\n  return this.performFetchRequest({\n    method: 'DELETE',\n    path: path,\n    params: parsedArgs\n  });\n}\n\n/**\n * Bulk Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction bulkApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = parsedArgs.type,\n      body = parsedArgs.body;\n\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  var path = void 0;\n  if (type) {\n    path = type + '/_bulk';\n  } else {\n    path = '_bulk';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n\n/**\n * Search Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction searchApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = void 0;\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    // eslint-disable-next-line\n    type = parsedArgs.type;\n  }\n\n  var body = parsedArgs.body;\n\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  var path = void 0;\n  if (type) {\n    path = type + '/_search';\n  } else {\n    path = '_search';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n\n/**\n * Msearch Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction msearchApi(args) {\n  var parsedArgs = removeUndefined(args);\n  // Validate arguments\n  var valid = validate(parsedArgs, {\n    body: 'object'\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var type = void 0;\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    type = parsedArgs.type;\n  }\n\n  var body = parsedArgs.body;\n\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  var path = void 0;\n  if (type) {\n    path = type + '/_msearch';\n  } else {\n    path = '_msearch';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path: path,\n    params: parsedArgs,\n    body: body\n  });\n}\n\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction reactiveSearchApi(query, settings, params) {\n  var parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n    params: params\n  });\n}\n\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction reactiveSearchv3Api(query, settings, params) {\n  var parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n    params: params\n  });\n}\n\n/**\n * To get mappings\n */\nfunction getMappings() {\n  return this.performFetchRequest({\n    method: 'GET',\n    path: '_mapping'\n  });\n}\n\n/**\n * ReactiveSearch suggestions API for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction getSuggestionsv3Api(query, settings) {\n  var parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  var valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  var body = {\n    settings: parsedSettings,\n    query: query\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body: body,\n    headers: getTelemetryHeaders(this.enableTelemetry),\n    isRSAPI: true,\n    isSuggestionsAPI: true,\n    isMongoRequest: !!this.mongodb\n  });\n}\n\nfunction appbasejs(config) {\n  var client = new AppBase(config);\n\n  AppBase.prototype.performFetchRequest = fetchRequest;\n\n  AppBase.prototype.index = indexApi;\n\n  AppBase.prototype.get = getApi;\n\n  AppBase.prototype.update = updateApi;\n\n  AppBase.prototype.delete = deleteApi;\n\n  AppBase.prototype.bulk = bulkApi;\n\n  AppBase.prototype.search = searchApi;\n\n  AppBase.prototype.msearch = msearchApi;\n\n  AppBase.prototype.reactiveSearch = reactiveSearchApi;\n\n  AppBase.prototype.reactiveSearchv3 = reactiveSearchv3Api;\n\n  AppBase.prototype.getQuerySuggestions = getSuggestionsv3Api;\n\n  AppBase.prototype.getMappings = getMappings;\n\n  AppBase.prototype.setHeaders = function setHeaders() {\n    var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    // Encode headers\n    if (shouldEncode) {\n      this.headers = encodeHeaders(headers);\n    } else {\n      this.headers = headers;\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Appbase = client;\n  }\n  return client;\n}\n\nexport default appbasejs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}