{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable no-restricted-globals */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll',\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = React.forwardRef(function Tabs(props, ref) {\n  var action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      theme = props.theme,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indicatorStyle = _React$useState4[0],\n      setIndicatorStyle = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    left: false,\n    right: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      displayScroll = _React$useState6[0],\n      setDisplayScroll = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      scrollerStyle = _React$useState8[0],\n      setScrollerStyle = _React$useState8[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var childrenWrapperRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = childrenWrapperRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var left = 0;\n\n    if (tabMeta && tabsMeta) {\n      var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n      left = Math.round(tabMeta.left - tabsMeta.left + correction);\n    }\n\n    var newIndicatorStyle = {\n      left: left,\n      // May be wrong until the font is loaded.\n      width: tabMeta ? Math.round(tabMeta.width) : 0\n    };\n\n    if ((newIndicatorStyle.left !== indicatorStyle.left || newIndicatorStyle.width !== indicatorStyle.width) && !isNaN(newIndicatorStyle.left) && !isNaN(newIndicatorStyle.width)) {\n      setIndicatorStyle(newIndicatorStyle);\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate('scrollLeft', tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var multiplier = isRtl ? -1 : 1;\n    var nextScrollLeft = tabsRef.current.scrollLeft + delta * multiplier; // Fix for Edge\n\n    var invert = isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    scroll(invert * nextScrollLeft);\n  };\n\n  var handleLeftScrollClick = function handleLeftScrollClick() {\n    moveTabsScroll(-tabsRef.current.clientWidth);\n  };\n\n  var handleRightScrollClick = function handleRightScrollClick() {\n    moveTabsScroll(tabsRef.current.clientWidth);\n  };\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarHeight) {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.left || displayScroll.right;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleLeftScrollClick,\n      visible: displayScroll.left,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleRightScrollClick,\n      visible: displayScroll.right,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta.left < tabsMeta.left) {\n      // left side of button is out of view\n      var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n      scroll(nextScrollLeft);\n    } else if (tabMeta.right > tabsMeta.right) {\n      // right side of button is out of view\n      var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n      scroll(_nextScrollLeft);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n      var showLeftScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      var showRightScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n      if (showLeftScroll !== displayScroll.left || showRightScroll !== displayScroll.right) {\n        setDisplayScroll({\n          left: showLeftScroll,\n          right: showRightScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useCallback(debounce(function () {\n    updateScrollButtonState();\n  }));\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState\n    };\n  }, [updateIndicatorState]);\n  var indicator = React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    });\n  });\n  var conditionalElements = getConditionalElements();\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), conditionalElements.scrollButtonLeft, conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    role: \"tablist\",\n    onScroll: handleTabsScroll\n  }, React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, centered && !scrollable && classes.centered),\n    ref: childrenWrapperRef\n  }, children), mounted && indicator), conditionalElements.scrollButtonRight);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(Tabs);","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","_defineProperty","React","PropTypes","warning","clsx","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","useEventCallback","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","flexContainer","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollable","scrollbarWidth","scrollButtons","scrollButtonsDesktop","breakpoints","down","indicator","Tabs","forwardRef","props","ref","action","_props$centered","childrenProp","children","classes","className","_props$component","component","Component","_props$indicatorColor","indicatorColor","onChange","_props$ScrollButtonCo","ScrollButtonComponent","_props$scrollButtons","_props$TabIndicatorPr","TabIndicatorProps","_props$textColor","textColor","value","_props$variant","variant","other","isRtl","direction","process","env","NODE_ENV","_React$useState","useState","_React$useState2","mounted","setMounted","_React$useState3","_React$useState4","indicatorStyle","setIndicatorStyle","_React$useState5","left","right","_React$useState6","displayScroll","setDisplayScroll","_React$useState7","marginBottom","_React$useState8","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","childrenWrapperRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollLeftNormalized","scrollWidth","tabMeta","_children","length","tab","get","concat","keys","Array","from","join","updateIndicatorState","_getTabsMeta","correction","Math","round","newIndicatorStyle","isNaN","scroll","scrollValue","moveTabsScroll","delta","multiplier","nextScrollLeft","invert","handleLeftScrollClick","handleRightScrollClick","handleScrollbarSizeChange","useCallback","scrollbarHeight","getConditionalElements","conditionalElements","scrollbarSizeListener","createElement","scrollButtonsActive","showScrollButtons","scrollButtonLeft","onClick","visible","scrollButtonRight","scrollSelectedIntoView","_getTabsMeta2","_nextScrollLeft","updateScrollButtonState","_tabsRef$current","showLeftScroll","showRightScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useImperativeHandle","updateIndicator","color","style","childIndex","Children","map","child","isValidElement","type","Fragment","childValue","undefined","set","selected","cloneElement","fullWidth","role","onScroll","propTypes","func","bool","node","object","isRequired","string","elementType","oneOf","any","name","withTheme"],"sources":["/Users/billionare/Documents/eshakids/eshaKids/node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll',\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = React.forwardRef(function Tabs(props, ref) {\n  var action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      theme = props.theme,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indicatorStyle = _React$useState4[0],\n      setIndicatorStyle = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    left: false,\n    right: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      displayScroll = _React$useState6[0],\n      setDisplayScroll = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      scrollerStyle = _React$useState8[0],\n      setScrollerStyle = _React$useState8[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var childrenWrapperRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = childrenWrapperRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var left = 0;\n\n    if (tabMeta && tabsMeta) {\n      var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n      left = Math.round(tabMeta.left - tabsMeta.left + correction);\n    }\n\n    var newIndicatorStyle = {\n      left: left,\n      // May be wrong until the font is loaded.\n      width: tabMeta ? Math.round(tabMeta.width) : 0\n    };\n\n    if ((newIndicatorStyle.left !== indicatorStyle.left || newIndicatorStyle.width !== indicatorStyle.width) && !isNaN(newIndicatorStyle.left) && !isNaN(newIndicatorStyle.width)) {\n      setIndicatorStyle(newIndicatorStyle);\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate('scrollLeft', tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var multiplier = isRtl ? -1 : 1;\n    var nextScrollLeft = tabsRef.current.scrollLeft + delta * multiplier; // Fix for Edge\n\n    var invert = isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    scroll(invert * nextScrollLeft);\n  };\n\n  var handleLeftScrollClick = function handleLeftScrollClick() {\n    moveTabsScroll(-tabsRef.current.clientWidth);\n  };\n\n  var handleRightScrollClick = function handleRightScrollClick() {\n    moveTabsScroll(tabsRef.current.clientWidth);\n  };\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarHeight) {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.left || displayScroll.right;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleLeftScrollClick,\n      visible: displayScroll.left,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleRightScrollClick,\n      visible: displayScroll.right,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta.left < tabsMeta.left) {\n      // left side of button is out of view\n      var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n      scroll(nextScrollLeft);\n    } else if (tabMeta.right > tabsMeta.right) {\n      // right side of button is out of view\n      var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n      scroll(_nextScrollLeft);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n      var showLeftScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      var showRightScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n      if (showLeftScroll !== displayScroll.left || showRightScroll !== displayScroll.right) {\n        setDisplayScroll({\n          left: showLeftScroll,\n          right: showRightScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useCallback(debounce(function () {\n    updateScrollButtonState();\n  }));\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState\n    };\n  }, [updateIndicatorState]);\n  var indicator = React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    });\n  });\n  var conditionalElements = getConditionalElements();\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), conditionalElements.scrollButtonLeft, conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    role: \"tablist\",\n    onScroll: handleTabsScroll\n  }, React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, centered && !scrollable && classes.centered),\n    ref: childrenWrapperRef\n  }, children), mounted && indicator), conditionalElements.scrollButtonRight);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(Tabs);"],"mappings":"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"},"metadata":{},"sourceType":"module"}